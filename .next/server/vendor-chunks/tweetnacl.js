/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tweetnacl";
exports.ids = ["vendor-chunks/tweetnacl"];
exports.modules = {

/***/ "(ssr)/./node_modules/tweetnacl/nacl-fast.js":
/*!*********************************************!*\
  !*** ./node_modules/tweetnacl/nacl-fast.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("(function(nacl) {\n    \"use strict\";\n    // Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n    // Public domain.\n    //\n    // Implementation derived from TweetNaCl version 20140427.\n    // See for details: http://tweetnacl.cr.yp.to/\n    var gf = function(init) {\n        var i, r = new Float64Array(16);\n        if (init) for(i = 0; i < init.length; i++)r[i] = init[i];\n        return r;\n    };\n    //  Pluggable, initialized in high-level API below.\n    var randombytes = function() {\n        throw new Error(\"no PRNG\");\n    };\n    var _0 = new Uint8Array(16);\n    var _9 = new Uint8Array(32);\n    _9[0] = 9;\n    var gf0 = gf(), gf1 = gf([\n        1\n    ]), _121665 = gf([\n        0xdb41,\n        1\n    ]), D = gf([\n        0x78a3,\n        0x1359,\n        0x4dca,\n        0x75eb,\n        0xd8ab,\n        0x4141,\n        0x0a4d,\n        0x0070,\n        0xe898,\n        0x7779,\n        0x4079,\n        0x8cc7,\n        0xfe73,\n        0x2b6f,\n        0x6cee,\n        0x5203\n    ]), D2 = gf([\n        0xf159,\n        0x26b2,\n        0x9b94,\n        0xebd6,\n        0xb156,\n        0x8283,\n        0x149a,\n        0x00e0,\n        0xd130,\n        0xeef3,\n        0x80f2,\n        0x198e,\n        0xfce7,\n        0x56df,\n        0xd9dc,\n        0x2406\n    ]), X = gf([\n        0xd51a,\n        0x8f25,\n        0x2d60,\n        0xc956,\n        0xa7b2,\n        0x9525,\n        0xc760,\n        0x692c,\n        0xdc5c,\n        0xfdd6,\n        0xe231,\n        0xc0a4,\n        0x53fe,\n        0xcd6e,\n        0x36d3,\n        0x2169\n    ]), Y = gf([\n        0x6658,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666\n    ]), I = gf([\n        0xa0b0,\n        0x4a0e,\n        0x1b27,\n        0xc4ee,\n        0xe478,\n        0xad2f,\n        0x1806,\n        0x2f43,\n        0xd7a7,\n        0x3dfb,\n        0x0099,\n        0x2b4d,\n        0xdf0b,\n        0x4fc1,\n        0x2480,\n        0x2b83\n    ]);\n    function ts64(x, i, h, l) {\n        x[i] = h >> 24 & 0xff;\n        x[i + 1] = h >> 16 & 0xff;\n        x[i + 2] = h >> 8 & 0xff;\n        x[i + 3] = h & 0xff;\n        x[i + 4] = l >> 24 & 0xff;\n        x[i + 5] = l >> 16 & 0xff;\n        x[i + 6] = l >> 8 & 0xff;\n        x[i + 7] = l & 0xff;\n    }\n    function vn(x, xi, y, yi, n) {\n        var i, d = 0;\n        for(i = 0; i < n; i++)d |= x[xi + i] ^ y[yi + i];\n        return (1 & d - 1 >>> 8) - 1;\n    }\n    function crypto_verify_16(x, xi, y, yi) {\n        return vn(x, xi, y, yi, 16);\n    }\n    function crypto_verify_32(x, xi, y, yi) {\n        return vn(x, xi, y, yi, 32);\n    }\n    function core_salsa20(o, p, k, c) {\n        var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24, j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24, j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24, j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24, j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24, j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24, j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24, j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24, j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24, j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24, j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24, j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24, j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24, j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24, j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24, j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;\n        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;\n        for(var i = 0; i < 20; i += 2){\n            u = x0 + x12 | 0;\n            x4 ^= u << 7 | u >>> 32 - 7;\n            u = x4 + x0 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x4 | 0;\n            x12 ^= u << 13 | u >>> 32 - 13;\n            u = x12 + x8 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x1 | 0;\n            x9 ^= u << 7 | u >>> 32 - 7;\n            u = x9 + x5 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x9 | 0;\n            x1 ^= u << 13 | u >>> 32 - 13;\n            u = x1 + x13 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x6 | 0;\n            x14 ^= u << 7 | u >>> 32 - 7;\n            u = x14 + x10 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x14 | 0;\n            x6 ^= u << 13 | u >>> 32 - 13;\n            u = x6 + x2 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x11 | 0;\n            x3 ^= u << 7 | u >>> 32 - 7;\n            u = x3 + x15 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x3 | 0;\n            x11 ^= u << 13 | u >>> 32 - 13;\n            u = x11 + x7 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n            u = x0 + x3 | 0;\n            x1 ^= u << 7 | u >>> 32 - 7;\n            u = x1 + x0 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x1 | 0;\n            x3 ^= u << 13 | u >>> 32 - 13;\n            u = x3 + x2 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x4 | 0;\n            x6 ^= u << 7 | u >>> 32 - 7;\n            u = x6 + x5 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x6 | 0;\n            x4 ^= u << 13 | u >>> 32 - 13;\n            u = x4 + x7 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x9 | 0;\n            x11 ^= u << 7 | u >>> 32 - 7;\n            u = x11 + x10 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x11 | 0;\n            x9 ^= u << 13 | u >>> 32 - 13;\n            u = x9 + x8 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x14 | 0;\n            x12 ^= u << 7 | u >>> 32 - 7;\n            u = x12 + x15 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x12 | 0;\n            x14 ^= u << 13 | u >>> 32 - 13;\n            u = x14 + x13 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n        }\n        x0 = x0 + j0 | 0;\n        x1 = x1 + j1 | 0;\n        x2 = x2 + j2 | 0;\n        x3 = x3 + j3 | 0;\n        x4 = x4 + j4 | 0;\n        x5 = x5 + j5 | 0;\n        x6 = x6 + j6 | 0;\n        x7 = x7 + j7 | 0;\n        x8 = x8 + j8 | 0;\n        x9 = x9 + j9 | 0;\n        x10 = x10 + j10 | 0;\n        x11 = x11 + j11 | 0;\n        x12 = x12 + j12 | 0;\n        x13 = x13 + j13 | 0;\n        x14 = x14 + j14 | 0;\n        x15 = x15 + j15 | 0;\n        o[0] = x0 >>> 0 & 0xff;\n        o[1] = x0 >>> 8 & 0xff;\n        o[2] = x0 >>> 16 & 0xff;\n        o[3] = x0 >>> 24 & 0xff;\n        o[4] = x1 >>> 0 & 0xff;\n        o[5] = x1 >>> 8 & 0xff;\n        o[6] = x1 >>> 16 & 0xff;\n        o[7] = x1 >>> 24 & 0xff;\n        o[8] = x2 >>> 0 & 0xff;\n        o[9] = x2 >>> 8 & 0xff;\n        o[10] = x2 >>> 16 & 0xff;\n        o[11] = x2 >>> 24 & 0xff;\n        o[12] = x3 >>> 0 & 0xff;\n        o[13] = x3 >>> 8 & 0xff;\n        o[14] = x3 >>> 16 & 0xff;\n        o[15] = x3 >>> 24 & 0xff;\n        o[16] = x4 >>> 0 & 0xff;\n        o[17] = x4 >>> 8 & 0xff;\n        o[18] = x4 >>> 16 & 0xff;\n        o[19] = x4 >>> 24 & 0xff;\n        o[20] = x5 >>> 0 & 0xff;\n        o[21] = x5 >>> 8 & 0xff;\n        o[22] = x5 >>> 16 & 0xff;\n        o[23] = x5 >>> 24 & 0xff;\n        o[24] = x6 >>> 0 & 0xff;\n        o[25] = x6 >>> 8 & 0xff;\n        o[26] = x6 >>> 16 & 0xff;\n        o[27] = x6 >>> 24 & 0xff;\n        o[28] = x7 >>> 0 & 0xff;\n        o[29] = x7 >>> 8 & 0xff;\n        o[30] = x7 >>> 16 & 0xff;\n        o[31] = x7 >>> 24 & 0xff;\n        o[32] = x8 >>> 0 & 0xff;\n        o[33] = x8 >>> 8 & 0xff;\n        o[34] = x8 >>> 16 & 0xff;\n        o[35] = x8 >>> 24 & 0xff;\n        o[36] = x9 >>> 0 & 0xff;\n        o[37] = x9 >>> 8 & 0xff;\n        o[38] = x9 >>> 16 & 0xff;\n        o[39] = x9 >>> 24 & 0xff;\n        o[40] = x10 >>> 0 & 0xff;\n        o[41] = x10 >>> 8 & 0xff;\n        o[42] = x10 >>> 16 & 0xff;\n        o[43] = x10 >>> 24 & 0xff;\n        o[44] = x11 >>> 0 & 0xff;\n        o[45] = x11 >>> 8 & 0xff;\n        o[46] = x11 >>> 16 & 0xff;\n        o[47] = x11 >>> 24 & 0xff;\n        o[48] = x12 >>> 0 & 0xff;\n        o[49] = x12 >>> 8 & 0xff;\n        o[50] = x12 >>> 16 & 0xff;\n        o[51] = x12 >>> 24 & 0xff;\n        o[52] = x13 >>> 0 & 0xff;\n        o[53] = x13 >>> 8 & 0xff;\n        o[54] = x13 >>> 16 & 0xff;\n        o[55] = x13 >>> 24 & 0xff;\n        o[56] = x14 >>> 0 & 0xff;\n        o[57] = x14 >>> 8 & 0xff;\n        o[58] = x14 >>> 16 & 0xff;\n        o[59] = x14 >>> 24 & 0xff;\n        o[60] = x15 >>> 0 & 0xff;\n        o[61] = x15 >>> 8 & 0xff;\n        o[62] = x15 >>> 16 & 0xff;\n        o[63] = x15 >>> 24 & 0xff;\n    }\n    function core_hsalsa20(o, p, k, c) {\n        var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24, j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24, j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24, j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24, j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24, j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24, j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24, j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24, j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24, j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24, j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24, j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24, j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24, j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24, j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24, j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;\n        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;\n        for(var i = 0; i < 20; i += 2){\n            u = x0 + x12 | 0;\n            x4 ^= u << 7 | u >>> 32 - 7;\n            u = x4 + x0 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x4 | 0;\n            x12 ^= u << 13 | u >>> 32 - 13;\n            u = x12 + x8 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x1 | 0;\n            x9 ^= u << 7 | u >>> 32 - 7;\n            u = x9 + x5 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x9 | 0;\n            x1 ^= u << 13 | u >>> 32 - 13;\n            u = x1 + x13 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x6 | 0;\n            x14 ^= u << 7 | u >>> 32 - 7;\n            u = x14 + x10 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x14 | 0;\n            x6 ^= u << 13 | u >>> 32 - 13;\n            u = x6 + x2 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x11 | 0;\n            x3 ^= u << 7 | u >>> 32 - 7;\n            u = x3 + x15 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x3 | 0;\n            x11 ^= u << 13 | u >>> 32 - 13;\n            u = x11 + x7 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n            u = x0 + x3 | 0;\n            x1 ^= u << 7 | u >>> 32 - 7;\n            u = x1 + x0 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x1 | 0;\n            x3 ^= u << 13 | u >>> 32 - 13;\n            u = x3 + x2 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x4 | 0;\n            x6 ^= u << 7 | u >>> 32 - 7;\n            u = x6 + x5 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x6 | 0;\n            x4 ^= u << 13 | u >>> 32 - 13;\n            u = x4 + x7 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x9 | 0;\n            x11 ^= u << 7 | u >>> 32 - 7;\n            u = x11 + x10 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x11 | 0;\n            x9 ^= u << 13 | u >>> 32 - 13;\n            u = x9 + x8 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x14 | 0;\n            x12 ^= u << 7 | u >>> 32 - 7;\n            u = x12 + x15 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x12 | 0;\n            x14 ^= u << 13 | u >>> 32 - 13;\n            u = x14 + x13 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n        }\n        o[0] = x0 >>> 0 & 0xff;\n        o[1] = x0 >>> 8 & 0xff;\n        o[2] = x0 >>> 16 & 0xff;\n        o[3] = x0 >>> 24 & 0xff;\n        o[4] = x5 >>> 0 & 0xff;\n        o[5] = x5 >>> 8 & 0xff;\n        o[6] = x5 >>> 16 & 0xff;\n        o[7] = x5 >>> 24 & 0xff;\n        o[8] = x10 >>> 0 & 0xff;\n        o[9] = x10 >>> 8 & 0xff;\n        o[10] = x10 >>> 16 & 0xff;\n        o[11] = x10 >>> 24 & 0xff;\n        o[12] = x15 >>> 0 & 0xff;\n        o[13] = x15 >>> 8 & 0xff;\n        o[14] = x15 >>> 16 & 0xff;\n        o[15] = x15 >>> 24 & 0xff;\n        o[16] = x6 >>> 0 & 0xff;\n        o[17] = x6 >>> 8 & 0xff;\n        o[18] = x6 >>> 16 & 0xff;\n        o[19] = x6 >>> 24 & 0xff;\n        o[20] = x7 >>> 0 & 0xff;\n        o[21] = x7 >>> 8 & 0xff;\n        o[22] = x7 >>> 16 & 0xff;\n        o[23] = x7 >>> 24 & 0xff;\n        o[24] = x8 >>> 0 & 0xff;\n        o[25] = x8 >>> 8 & 0xff;\n        o[26] = x8 >>> 16 & 0xff;\n        o[27] = x8 >>> 24 & 0xff;\n        o[28] = x9 >>> 0 & 0xff;\n        o[29] = x9 >>> 8 & 0xff;\n        o[30] = x9 >>> 16 & 0xff;\n        o[31] = x9 >>> 24 & 0xff;\n    }\n    function crypto_core_salsa20(out, inp, k, c) {\n        core_salsa20(out, inp, k, c);\n    }\n    function crypto_core_hsalsa20(out, inp, k, c) {\n        core_hsalsa20(out, inp, k, c);\n    }\n    var sigma = new Uint8Array([\n        101,\n        120,\n        112,\n        97,\n        110,\n        100,\n        32,\n        51,\n        50,\n        45,\n        98,\n        121,\n        116,\n        101,\n        32,\n        107\n    ]);\n    // \"expand 32-byte k\"\n    function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n        var z = new Uint8Array(16), x = new Uint8Array(64);\n        var u, i;\n        for(i = 0; i < 16; i++)z[i] = 0;\n        for(i = 0; i < 8; i++)z[i] = n[i];\n        while(b >= 64){\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < 64; i++)c[cpos + i] = m[mpos + i] ^ x[i];\n            u = 1;\n            for(i = 8; i < 16; i++){\n                u = u + (z[i] & 0xff) | 0;\n                z[i] = u & 0xff;\n                u >>>= 8;\n            }\n            b -= 64;\n            cpos += 64;\n            mpos += 64;\n        }\n        if (b > 0) {\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < b; i++)c[cpos + i] = m[mpos + i] ^ x[i];\n        }\n        return 0;\n    }\n    function crypto_stream_salsa20(c, cpos, b, n, k) {\n        var z = new Uint8Array(16), x = new Uint8Array(64);\n        var u, i;\n        for(i = 0; i < 16; i++)z[i] = 0;\n        for(i = 0; i < 8; i++)z[i] = n[i];\n        while(b >= 64){\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < 64; i++)c[cpos + i] = x[i];\n            u = 1;\n            for(i = 8; i < 16; i++){\n                u = u + (z[i] & 0xff) | 0;\n                z[i] = u & 0xff;\n                u >>>= 8;\n            }\n            b -= 64;\n            cpos += 64;\n        }\n        if (b > 0) {\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < b; i++)c[cpos + i] = x[i];\n        }\n        return 0;\n    }\n    function crypto_stream(c, cpos, d, n, k) {\n        var s = new Uint8Array(32);\n        crypto_core_hsalsa20(s, n, k, sigma);\n        var sn = new Uint8Array(8);\n        for(var i = 0; i < 8; i++)sn[i] = n[i + 16];\n        return crypto_stream_salsa20(c, cpos, d, sn, s);\n    }\n    function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n        var s = new Uint8Array(32);\n        crypto_core_hsalsa20(s, n, k, sigma);\n        var sn = new Uint8Array(8);\n        for(var i = 0; i < 8; i++)sn[i] = n[i + 16];\n        return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, sn, s);\n    }\n    /*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/ var poly1305 = function(key) {\n        this.buffer = new Uint8Array(16);\n        this.r = new Uint16Array(10);\n        this.h = new Uint16Array(10);\n        this.pad = new Uint16Array(8);\n        this.leftover = 0;\n        this.fin = 0;\n        var t0, t1, t2, t3, t4, t5, t6, t7;\n        t0 = key[0] & 0xff | (key[1] & 0xff) << 8;\n        this.r[0] = t0 & 0x1fff;\n        t1 = key[2] & 0xff | (key[3] & 0xff) << 8;\n        this.r[1] = (t0 >>> 13 | t1 << 3) & 0x1fff;\n        t2 = key[4] & 0xff | (key[5] & 0xff) << 8;\n        this.r[2] = (t1 >>> 10 | t2 << 6) & 0x1f03;\n        t3 = key[6] & 0xff | (key[7] & 0xff) << 8;\n        this.r[3] = (t2 >>> 7 | t3 << 9) & 0x1fff;\n        t4 = key[8] & 0xff | (key[9] & 0xff) << 8;\n        this.r[4] = (t3 >>> 4 | t4 << 12) & 0x00ff;\n        this.r[5] = t4 >>> 1 & 0x1ffe;\n        t5 = key[10] & 0xff | (key[11] & 0xff) << 8;\n        this.r[6] = (t4 >>> 14 | t5 << 2) & 0x1fff;\n        t6 = key[12] & 0xff | (key[13] & 0xff) << 8;\n        this.r[7] = (t5 >>> 11 | t6 << 5) & 0x1f81;\n        t7 = key[14] & 0xff | (key[15] & 0xff) << 8;\n        this.r[8] = (t6 >>> 8 | t7 << 8) & 0x1fff;\n        this.r[9] = t7 >>> 5 & 0x007f;\n        this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n        this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n        this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n        this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n        this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n        this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n        this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n        this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n    };\n    poly1305.prototype.blocks = function(m, mpos, bytes) {\n        var hibit = this.fin ? 0 : 1 << 11;\n        var t0, t1, t2, t3, t4, t5, t6, t7, c;\n        var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n        var h0 = this.h[0], h1 = this.h[1], h2 = this.h[2], h3 = this.h[3], h4 = this.h[4], h5 = this.h[5], h6 = this.h[6], h7 = this.h[7], h8 = this.h[8], h9 = this.h[9];\n        var r0 = this.r[0], r1 = this.r[1], r2 = this.r[2], r3 = this.r[3], r4 = this.r[4], r5 = this.r[5], r6 = this.r[6], r7 = this.r[7], r8 = this.r[8], r9 = this.r[9];\n        while(bytes >= 16){\n            t0 = m[mpos + 0] & 0xff | (m[mpos + 1] & 0xff) << 8;\n            h0 += t0 & 0x1fff;\n            t1 = m[mpos + 2] & 0xff | (m[mpos + 3] & 0xff) << 8;\n            h1 += (t0 >>> 13 | t1 << 3) & 0x1fff;\n            t2 = m[mpos + 4] & 0xff | (m[mpos + 5] & 0xff) << 8;\n            h2 += (t1 >>> 10 | t2 << 6) & 0x1fff;\n            t3 = m[mpos + 6] & 0xff | (m[mpos + 7] & 0xff) << 8;\n            h3 += (t2 >>> 7 | t3 << 9) & 0x1fff;\n            t4 = m[mpos + 8] & 0xff | (m[mpos + 9] & 0xff) << 8;\n            h4 += (t3 >>> 4 | t4 << 12) & 0x1fff;\n            h5 += t4 >>> 1 & 0x1fff;\n            t5 = m[mpos + 10] & 0xff | (m[mpos + 11] & 0xff) << 8;\n            h6 += (t4 >>> 14 | t5 << 2) & 0x1fff;\n            t6 = m[mpos + 12] & 0xff | (m[mpos + 13] & 0xff) << 8;\n            h7 += (t5 >>> 11 | t6 << 5) & 0x1fff;\n            t7 = m[mpos + 14] & 0xff | (m[mpos + 15] & 0xff) << 8;\n            h8 += (t6 >>> 8 | t7 << 8) & 0x1fff;\n            h9 += t7 >>> 5 | hibit;\n            c = 0;\n            d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = d0 >>> 13;\n            d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += d0 >>> 13;\n            d0 &= 0x1fff;\n            d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = d1 >>> 13;\n            d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += d1 >>> 13;\n            d1 &= 0x1fff;\n            d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = d2 >>> 13;\n            d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += d2 >>> 13;\n            d2 &= 0x1fff;\n            d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = d3 >>> 13;\n            d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += d3 >>> 13;\n            d3 &= 0x1fff;\n            d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = d4 >>> 13;\n            d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += d4 >>> 13;\n            d4 &= 0x1fff;\n            d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = d5 >>> 13;\n            d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += d5 >>> 13;\n            d5 &= 0x1fff;\n            d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = d6 >>> 13;\n            d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += d6 >>> 13;\n            d6 &= 0x1fff;\n            d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = d7 >>> 13;\n            d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += d7 >>> 13;\n            d7 &= 0x1fff;\n            d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = d8 >>> 13;\n            d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += d8 >>> 13;\n            d8 &= 0x1fff;\n            d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = d9 >>> 13;\n            d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += d9 >>> 13;\n            d9 &= 0x1fff;\n            c = (c << 2) + c | 0;\n            c = c + d0 | 0;\n            d0 = c & 0x1fff;\n            c = c >>> 13;\n            d1 += c;\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n            mpos += 16;\n            bytes -= 16;\n        }\n        this.h[0] = h0;\n        this.h[1] = h1;\n        this.h[2] = h2;\n        this.h[3] = h3;\n        this.h[4] = h4;\n        this.h[5] = h5;\n        this.h[6] = h6;\n        this.h[7] = h7;\n        this.h[8] = h8;\n        this.h[9] = h9;\n    };\n    poly1305.prototype.finish = function(mac, macpos) {\n        var g = new Uint16Array(10);\n        var c, mask, f, i;\n        if (this.leftover) {\n            i = this.leftover;\n            this.buffer[i++] = 1;\n            for(; i < 16; i++)this.buffer[i] = 0;\n            this.fin = 1;\n            this.blocks(this.buffer, 0, 16);\n        }\n        c = this.h[1] >>> 13;\n        this.h[1] &= 0x1fff;\n        for(i = 2; i < 10; i++){\n            this.h[i] += c;\n            c = this.h[i] >>> 13;\n            this.h[i] &= 0x1fff;\n        }\n        this.h[0] += c * 5;\n        c = this.h[0] >>> 13;\n        this.h[0] &= 0x1fff;\n        this.h[1] += c;\n        c = this.h[1] >>> 13;\n        this.h[1] &= 0x1fff;\n        this.h[2] += c;\n        g[0] = this.h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for(i = 1; i < 10; i++){\n            g[i] = this.h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        mask = (c ^ 1) - 1;\n        for(i = 0; i < 10; i++)g[i] &= mask;\n        mask = ~mask;\n        for(i = 0; i < 10; i++)this.h[i] = this.h[i] & mask | g[i];\n        this.h[0] = (this.h[0] | this.h[1] << 13) & 0xffff;\n        this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 0xffff;\n        this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 0xffff;\n        this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 0xffff;\n        this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 0xffff;\n        this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 0xffff;\n        this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 0xffff;\n        this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 0xffff;\n        f = this.h[0] + this.pad[0];\n        this.h[0] = f & 0xffff;\n        for(i = 1; i < 8; i++){\n            f = (this.h[i] + this.pad[i] | 0) + (f >>> 16) | 0;\n            this.h[i] = f & 0xffff;\n        }\n        mac[macpos + 0] = this.h[0] >>> 0 & 0xff;\n        mac[macpos + 1] = this.h[0] >>> 8 & 0xff;\n        mac[macpos + 2] = this.h[1] >>> 0 & 0xff;\n        mac[macpos + 3] = this.h[1] >>> 8 & 0xff;\n        mac[macpos + 4] = this.h[2] >>> 0 & 0xff;\n        mac[macpos + 5] = this.h[2] >>> 8 & 0xff;\n        mac[macpos + 6] = this.h[3] >>> 0 & 0xff;\n        mac[macpos + 7] = this.h[3] >>> 8 & 0xff;\n        mac[macpos + 8] = this.h[4] >>> 0 & 0xff;\n        mac[macpos + 9] = this.h[4] >>> 8 & 0xff;\n        mac[macpos + 10] = this.h[5] >>> 0 & 0xff;\n        mac[macpos + 11] = this.h[5] >>> 8 & 0xff;\n        mac[macpos + 12] = this.h[6] >>> 0 & 0xff;\n        mac[macpos + 13] = this.h[6] >>> 8 & 0xff;\n        mac[macpos + 14] = this.h[7] >>> 0 & 0xff;\n        mac[macpos + 15] = this.h[7] >>> 8 & 0xff;\n    };\n    poly1305.prototype.update = function(m, mpos, bytes) {\n        var i, want;\n        if (this.leftover) {\n            want = 16 - this.leftover;\n            if (want > bytes) want = bytes;\n            for(i = 0; i < want; i++)this.buffer[this.leftover + i] = m[mpos + i];\n            bytes -= want;\n            mpos += want;\n            this.leftover += want;\n            if (this.leftover < 16) return;\n            this.blocks(this.buffer, 0, 16);\n            this.leftover = 0;\n        }\n        if (bytes >= 16) {\n            want = bytes - bytes % 16;\n            this.blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n        if (bytes) {\n            for(i = 0; i < bytes; i++)this.buffer[this.leftover + i] = m[mpos + i];\n            this.leftover += bytes;\n        }\n    };\n    function crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n        var s = new poly1305(k);\n        s.update(m, mpos, n);\n        s.finish(out, outpos);\n        return 0;\n    }\n    function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n        var x = new Uint8Array(16);\n        crypto_onetimeauth(x, 0, m, mpos, n, k);\n        return crypto_verify_16(h, hpos, x, 0);\n    }\n    function crypto_secretbox(c, m, d, n, k) {\n        var i;\n        if (d < 32) return -1;\n        crypto_stream_xor(c, 0, m, 0, d, n, k);\n        crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n        for(i = 0; i < 16; i++)c[i] = 0;\n        return 0;\n    }\n    function crypto_secretbox_open(m, c, d, n, k) {\n        var i;\n        var x = new Uint8Array(32);\n        if (d < 32) return -1;\n        crypto_stream(x, 0, 32, n, k);\n        if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\n        crypto_stream_xor(m, 0, c, 0, d, n, k);\n        for(i = 0; i < 32; i++)m[i] = 0;\n        return 0;\n    }\n    function set25519(r, a) {\n        var i;\n        for(i = 0; i < 16; i++)r[i] = a[i] | 0;\n    }\n    function car25519(o) {\n        var i, v, c = 1;\n        for(i = 0; i < 16; i++){\n            v = o[i] + c + 65535;\n            c = Math.floor(v / 65536);\n            o[i] = v - c * 65536;\n        }\n        o[0] += c - 1 + 37 * (c - 1);\n    }\n    function sel25519(p, q, b) {\n        var t, c = ~(b - 1);\n        for(var i = 0; i < 16; i++){\n            t = c & (p[i] ^ q[i]);\n            p[i] ^= t;\n            q[i] ^= t;\n        }\n    }\n    function pack25519(o, n) {\n        var i, j, b;\n        var m = gf(), t = gf();\n        for(i = 0; i < 16; i++)t[i] = n[i];\n        car25519(t);\n        car25519(t);\n        car25519(t);\n        for(j = 0; j < 2; j++){\n            m[0] = t[0] - 0xffed;\n            for(i = 1; i < 15; i++){\n                m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n                m[i - 1] &= 0xffff;\n            }\n            m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n            b = m[15] >> 16 & 1;\n            m[14] &= 0xffff;\n            sel25519(t, m, 1 - b);\n        }\n        for(i = 0; i < 16; i++){\n            o[2 * i] = t[i] & 0xff;\n            o[2 * i + 1] = t[i] >> 8;\n        }\n    }\n    function neq25519(a, b) {\n        var c = new Uint8Array(32), d = new Uint8Array(32);\n        pack25519(c, a);\n        pack25519(d, b);\n        return crypto_verify_32(c, 0, d, 0);\n    }\n    function par25519(a) {\n        var d = new Uint8Array(32);\n        pack25519(d, a);\n        return d[0] & 1;\n    }\n    function unpack25519(o, n) {\n        var i;\n        for(i = 0; i < 16; i++)o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n        o[15] &= 0x7fff;\n    }\n    function A(o, a, b) {\n        for(var i = 0; i < 16; i++)o[i] = a[i] + b[i];\n    }\n    function Z(o, a, b) {\n        for(var i = 0; i < 16; i++)o[i] = a[i] - b[i];\n    }\n    function M(o, a, b) {\n        var v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n        v = a[0];\n        t0 += v * b0;\n        t1 += v * b1;\n        t2 += v * b2;\n        t3 += v * b3;\n        t4 += v * b4;\n        t5 += v * b5;\n        t6 += v * b6;\n        t7 += v * b7;\n        t8 += v * b8;\n        t9 += v * b9;\n        t10 += v * b10;\n        t11 += v * b11;\n        t12 += v * b12;\n        t13 += v * b13;\n        t14 += v * b14;\n        t15 += v * b15;\n        v = a[1];\n        t1 += v * b0;\n        t2 += v * b1;\n        t3 += v * b2;\n        t4 += v * b3;\n        t5 += v * b4;\n        t6 += v * b5;\n        t7 += v * b6;\n        t8 += v * b7;\n        t9 += v * b8;\n        t10 += v * b9;\n        t11 += v * b10;\n        t12 += v * b11;\n        t13 += v * b12;\n        t14 += v * b13;\n        t15 += v * b14;\n        t16 += v * b15;\n        v = a[2];\n        t2 += v * b0;\n        t3 += v * b1;\n        t4 += v * b2;\n        t5 += v * b3;\n        t6 += v * b4;\n        t7 += v * b5;\n        t8 += v * b6;\n        t9 += v * b7;\n        t10 += v * b8;\n        t11 += v * b9;\n        t12 += v * b10;\n        t13 += v * b11;\n        t14 += v * b12;\n        t15 += v * b13;\n        t16 += v * b14;\n        t17 += v * b15;\n        v = a[3];\n        t3 += v * b0;\n        t4 += v * b1;\n        t5 += v * b2;\n        t6 += v * b3;\n        t7 += v * b4;\n        t8 += v * b5;\n        t9 += v * b6;\n        t10 += v * b7;\n        t11 += v * b8;\n        t12 += v * b9;\n        t13 += v * b10;\n        t14 += v * b11;\n        t15 += v * b12;\n        t16 += v * b13;\n        t17 += v * b14;\n        t18 += v * b15;\n        v = a[4];\n        t4 += v * b0;\n        t5 += v * b1;\n        t6 += v * b2;\n        t7 += v * b3;\n        t8 += v * b4;\n        t9 += v * b5;\n        t10 += v * b6;\n        t11 += v * b7;\n        t12 += v * b8;\n        t13 += v * b9;\n        t14 += v * b10;\n        t15 += v * b11;\n        t16 += v * b12;\n        t17 += v * b13;\n        t18 += v * b14;\n        t19 += v * b15;\n        v = a[5];\n        t5 += v * b0;\n        t6 += v * b1;\n        t7 += v * b2;\n        t8 += v * b3;\n        t9 += v * b4;\n        t10 += v * b5;\n        t11 += v * b6;\n        t12 += v * b7;\n        t13 += v * b8;\n        t14 += v * b9;\n        t15 += v * b10;\n        t16 += v * b11;\n        t17 += v * b12;\n        t18 += v * b13;\n        t19 += v * b14;\n        t20 += v * b15;\n        v = a[6];\n        t6 += v * b0;\n        t7 += v * b1;\n        t8 += v * b2;\n        t9 += v * b3;\n        t10 += v * b4;\n        t11 += v * b5;\n        t12 += v * b6;\n        t13 += v * b7;\n        t14 += v * b8;\n        t15 += v * b9;\n        t16 += v * b10;\n        t17 += v * b11;\n        t18 += v * b12;\n        t19 += v * b13;\n        t20 += v * b14;\n        t21 += v * b15;\n        v = a[7];\n        t7 += v * b0;\n        t8 += v * b1;\n        t9 += v * b2;\n        t10 += v * b3;\n        t11 += v * b4;\n        t12 += v * b5;\n        t13 += v * b6;\n        t14 += v * b7;\n        t15 += v * b8;\n        t16 += v * b9;\n        t17 += v * b10;\n        t18 += v * b11;\n        t19 += v * b12;\n        t20 += v * b13;\n        t21 += v * b14;\n        t22 += v * b15;\n        v = a[8];\n        t8 += v * b0;\n        t9 += v * b1;\n        t10 += v * b2;\n        t11 += v * b3;\n        t12 += v * b4;\n        t13 += v * b5;\n        t14 += v * b6;\n        t15 += v * b7;\n        t16 += v * b8;\n        t17 += v * b9;\n        t18 += v * b10;\n        t19 += v * b11;\n        t20 += v * b12;\n        t21 += v * b13;\n        t22 += v * b14;\n        t23 += v * b15;\n        v = a[9];\n        t9 += v * b0;\n        t10 += v * b1;\n        t11 += v * b2;\n        t12 += v * b3;\n        t13 += v * b4;\n        t14 += v * b5;\n        t15 += v * b6;\n        t16 += v * b7;\n        t17 += v * b8;\n        t18 += v * b9;\n        t19 += v * b10;\n        t20 += v * b11;\n        t21 += v * b12;\n        t22 += v * b13;\n        t23 += v * b14;\n        t24 += v * b15;\n        v = a[10];\n        t10 += v * b0;\n        t11 += v * b1;\n        t12 += v * b2;\n        t13 += v * b3;\n        t14 += v * b4;\n        t15 += v * b5;\n        t16 += v * b6;\n        t17 += v * b7;\n        t18 += v * b8;\n        t19 += v * b9;\n        t20 += v * b10;\n        t21 += v * b11;\n        t22 += v * b12;\n        t23 += v * b13;\n        t24 += v * b14;\n        t25 += v * b15;\n        v = a[11];\n        t11 += v * b0;\n        t12 += v * b1;\n        t13 += v * b2;\n        t14 += v * b3;\n        t15 += v * b4;\n        t16 += v * b5;\n        t17 += v * b6;\n        t18 += v * b7;\n        t19 += v * b8;\n        t20 += v * b9;\n        t21 += v * b10;\n        t22 += v * b11;\n        t23 += v * b12;\n        t24 += v * b13;\n        t25 += v * b14;\n        t26 += v * b15;\n        v = a[12];\n        t12 += v * b0;\n        t13 += v * b1;\n        t14 += v * b2;\n        t15 += v * b3;\n        t16 += v * b4;\n        t17 += v * b5;\n        t18 += v * b6;\n        t19 += v * b7;\n        t20 += v * b8;\n        t21 += v * b9;\n        t22 += v * b10;\n        t23 += v * b11;\n        t24 += v * b12;\n        t25 += v * b13;\n        t26 += v * b14;\n        t27 += v * b15;\n        v = a[13];\n        t13 += v * b0;\n        t14 += v * b1;\n        t15 += v * b2;\n        t16 += v * b3;\n        t17 += v * b4;\n        t18 += v * b5;\n        t19 += v * b6;\n        t20 += v * b7;\n        t21 += v * b8;\n        t22 += v * b9;\n        t23 += v * b10;\n        t24 += v * b11;\n        t25 += v * b12;\n        t26 += v * b13;\n        t27 += v * b14;\n        t28 += v * b15;\n        v = a[14];\n        t14 += v * b0;\n        t15 += v * b1;\n        t16 += v * b2;\n        t17 += v * b3;\n        t18 += v * b4;\n        t19 += v * b5;\n        t20 += v * b6;\n        t21 += v * b7;\n        t22 += v * b8;\n        t23 += v * b9;\n        t24 += v * b10;\n        t25 += v * b11;\n        t26 += v * b12;\n        t27 += v * b13;\n        t28 += v * b14;\n        t29 += v * b15;\n        v = a[15];\n        t15 += v * b0;\n        t16 += v * b1;\n        t17 += v * b2;\n        t18 += v * b3;\n        t19 += v * b4;\n        t20 += v * b5;\n        t21 += v * b6;\n        t22 += v * b7;\n        t23 += v * b8;\n        t24 += v * b9;\n        t25 += v * b10;\n        t26 += v * b11;\n        t27 += v * b12;\n        t28 += v * b13;\n        t29 += v * b14;\n        t30 += v * b15;\n        t0 += 38 * t16;\n        t1 += 38 * t17;\n        t2 += 38 * t18;\n        t3 += 38 * t19;\n        t4 += 38 * t20;\n        t5 += 38 * t21;\n        t6 += 38 * t22;\n        t7 += 38 * t23;\n        t8 += 38 * t24;\n        t9 += 38 * t25;\n        t10 += 38 * t26;\n        t11 += 38 * t27;\n        t12 += 38 * t28;\n        t13 += 38 * t29;\n        t14 += 38 * t30;\n        // t15 left as is\n        // first car\n        c = 1;\n        v = t0 + c + 65535;\n        c = Math.floor(v / 65536);\n        t0 = v - c * 65536;\n        v = t1 + c + 65535;\n        c = Math.floor(v / 65536);\n        t1 = v - c * 65536;\n        v = t2 + c + 65535;\n        c = Math.floor(v / 65536);\n        t2 = v - c * 65536;\n        v = t3 + c + 65535;\n        c = Math.floor(v / 65536);\n        t3 = v - c * 65536;\n        v = t4 + c + 65535;\n        c = Math.floor(v / 65536);\n        t4 = v - c * 65536;\n        v = t5 + c + 65535;\n        c = Math.floor(v / 65536);\n        t5 = v - c * 65536;\n        v = t6 + c + 65535;\n        c = Math.floor(v / 65536);\n        t6 = v - c * 65536;\n        v = t7 + c + 65535;\n        c = Math.floor(v / 65536);\n        t7 = v - c * 65536;\n        v = t8 + c + 65535;\n        c = Math.floor(v / 65536);\n        t8 = v - c * 65536;\n        v = t9 + c + 65535;\n        c = Math.floor(v / 65536);\n        t9 = v - c * 65536;\n        v = t10 + c + 65535;\n        c = Math.floor(v / 65536);\n        t10 = v - c * 65536;\n        v = t11 + c + 65535;\n        c = Math.floor(v / 65536);\n        t11 = v - c * 65536;\n        v = t12 + c + 65535;\n        c = Math.floor(v / 65536);\n        t12 = v - c * 65536;\n        v = t13 + c + 65535;\n        c = Math.floor(v / 65536);\n        t13 = v - c * 65536;\n        v = t14 + c + 65535;\n        c = Math.floor(v / 65536);\n        t14 = v - c * 65536;\n        v = t15 + c + 65535;\n        c = Math.floor(v / 65536);\n        t15 = v - c * 65536;\n        t0 += c - 1 + 37 * (c - 1);\n        // second car\n        c = 1;\n        v = t0 + c + 65535;\n        c = Math.floor(v / 65536);\n        t0 = v - c * 65536;\n        v = t1 + c + 65535;\n        c = Math.floor(v / 65536);\n        t1 = v - c * 65536;\n        v = t2 + c + 65535;\n        c = Math.floor(v / 65536);\n        t2 = v - c * 65536;\n        v = t3 + c + 65535;\n        c = Math.floor(v / 65536);\n        t3 = v - c * 65536;\n        v = t4 + c + 65535;\n        c = Math.floor(v / 65536);\n        t4 = v - c * 65536;\n        v = t5 + c + 65535;\n        c = Math.floor(v / 65536);\n        t5 = v - c * 65536;\n        v = t6 + c + 65535;\n        c = Math.floor(v / 65536);\n        t6 = v - c * 65536;\n        v = t7 + c + 65535;\n        c = Math.floor(v / 65536);\n        t7 = v - c * 65536;\n        v = t8 + c + 65535;\n        c = Math.floor(v / 65536);\n        t8 = v - c * 65536;\n        v = t9 + c + 65535;\n        c = Math.floor(v / 65536);\n        t9 = v - c * 65536;\n        v = t10 + c + 65535;\n        c = Math.floor(v / 65536);\n        t10 = v - c * 65536;\n        v = t11 + c + 65535;\n        c = Math.floor(v / 65536);\n        t11 = v - c * 65536;\n        v = t12 + c + 65535;\n        c = Math.floor(v / 65536);\n        t12 = v - c * 65536;\n        v = t13 + c + 65535;\n        c = Math.floor(v / 65536);\n        t13 = v - c * 65536;\n        v = t14 + c + 65535;\n        c = Math.floor(v / 65536);\n        t14 = v - c * 65536;\n        v = t15 + c + 65535;\n        c = Math.floor(v / 65536);\n        t15 = v - c * 65536;\n        t0 += c - 1 + 37 * (c - 1);\n        o[0] = t0;\n        o[1] = t1;\n        o[2] = t2;\n        o[3] = t3;\n        o[4] = t4;\n        o[5] = t5;\n        o[6] = t6;\n        o[7] = t7;\n        o[8] = t8;\n        o[9] = t9;\n        o[10] = t10;\n        o[11] = t11;\n        o[12] = t12;\n        o[13] = t13;\n        o[14] = t14;\n        o[15] = t15;\n    }\n    function S(o, a) {\n        M(o, a, a);\n    }\n    function inv25519(o, i) {\n        var c = gf();\n        var a;\n        for(a = 0; a < 16; a++)c[a] = i[a];\n        for(a = 253; a >= 0; a--){\n            S(c, c);\n            if (a !== 2 && a !== 4) M(c, c, i);\n        }\n        for(a = 0; a < 16; a++)o[a] = c[a];\n    }\n    function pow2523(o, i) {\n        var c = gf();\n        var a;\n        for(a = 0; a < 16; a++)c[a] = i[a];\n        for(a = 250; a >= 0; a--){\n            S(c, c);\n            if (a !== 1) M(c, c, i);\n        }\n        for(a = 0; a < 16; a++)o[a] = c[a];\n    }\n    function crypto_scalarmult(q, n, p) {\n        var z = new Uint8Array(32);\n        var x = new Float64Array(80), r, i;\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n        for(i = 0; i < 31; i++)z[i] = n[i];\n        z[31] = n[31] & 127 | 64;\n        z[0] &= 248;\n        unpack25519(x, p);\n        for(i = 0; i < 16; i++){\n            b[i] = x[i];\n            d[i] = a[i] = c[i] = 0;\n        }\n        a[0] = d[0] = 1;\n        for(i = 254; i >= 0; --i){\n            r = z[i >>> 3] >>> (i & 7) & 1;\n            sel25519(a, b, r);\n            sel25519(c, d, r);\n            A(e, a, c);\n            Z(a, a, c);\n            A(c, b, d);\n            Z(b, b, d);\n            S(d, e);\n            S(f, a);\n            M(a, c, a);\n            M(c, b, e);\n            A(e, a, c);\n            Z(a, a, c);\n            S(b, a);\n            Z(c, d, f);\n            M(a, c, _121665);\n            A(a, a, d);\n            M(c, c, a);\n            M(a, d, f);\n            M(d, b, x);\n            S(b, e);\n            sel25519(a, b, r);\n            sel25519(c, d, r);\n        }\n        for(i = 0; i < 16; i++){\n            x[i + 16] = a[i];\n            x[i + 32] = c[i];\n            x[i + 48] = b[i];\n            x[i + 64] = d[i];\n        }\n        var x32 = x.subarray(32);\n        var x16 = x.subarray(16);\n        inv25519(x32, x32);\n        M(x16, x16, x32);\n        pack25519(q, x16);\n        return 0;\n    }\n    function crypto_scalarmult_base(q, n) {\n        return crypto_scalarmult(q, n, _9);\n    }\n    function crypto_box_keypair(y, x) {\n        randombytes(x, 32);\n        return crypto_scalarmult_base(y, x);\n    }\n    function crypto_box_beforenm(k, y, x) {\n        var s = new Uint8Array(32);\n        crypto_scalarmult(s, x, y);\n        return crypto_core_hsalsa20(k, _0, s, sigma);\n    }\n    var crypto_box_afternm = crypto_secretbox;\n    var crypto_box_open_afternm = crypto_secretbox_open;\n    function crypto_box(c, m, d, n, y, x) {\n        var k = new Uint8Array(32);\n        crypto_box_beforenm(k, y, x);\n        return crypto_box_afternm(c, m, d, n, k);\n    }\n    function crypto_box_open(m, c, d, n, y, x) {\n        var k = new Uint8Array(32);\n        crypto_box_beforenm(k, y, x);\n        return crypto_box_open_afternm(m, c, d, n, k);\n    }\n    var K = [\n        0x428a2f98,\n        0xd728ae22,\n        0x71374491,\n        0x23ef65cd,\n        0xb5c0fbcf,\n        0xec4d3b2f,\n        0xe9b5dba5,\n        0x8189dbbc,\n        0x3956c25b,\n        0xf348b538,\n        0x59f111f1,\n        0xb605d019,\n        0x923f82a4,\n        0xaf194f9b,\n        0xab1c5ed5,\n        0xda6d8118,\n        0xd807aa98,\n        0xa3030242,\n        0x12835b01,\n        0x45706fbe,\n        0x243185be,\n        0x4ee4b28c,\n        0x550c7dc3,\n        0xd5ffb4e2,\n        0x72be5d74,\n        0xf27b896f,\n        0x80deb1fe,\n        0x3b1696b1,\n        0x9bdc06a7,\n        0x25c71235,\n        0xc19bf174,\n        0xcf692694,\n        0xe49b69c1,\n        0x9ef14ad2,\n        0xefbe4786,\n        0x384f25e3,\n        0x0fc19dc6,\n        0x8b8cd5b5,\n        0x240ca1cc,\n        0x77ac9c65,\n        0x2de92c6f,\n        0x592b0275,\n        0x4a7484aa,\n        0x6ea6e483,\n        0x5cb0a9dc,\n        0xbd41fbd4,\n        0x76f988da,\n        0x831153b5,\n        0x983e5152,\n        0xee66dfab,\n        0xa831c66d,\n        0x2db43210,\n        0xb00327c8,\n        0x98fb213f,\n        0xbf597fc7,\n        0xbeef0ee4,\n        0xc6e00bf3,\n        0x3da88fc2,\n        0xd5a79147,\n        0x930aa725,\n        0x06ca6351,\n        0xe003826f,\n        0x14292967,\n        0x0a0e6e70,\n        0x27b70a85,\n        0x46d22ffc,\n        0x2e1b2138,\n        0x5c26c926,\n        0x4d2c6dfc,\n        0x5ac42aed,\n        0x53380d13,\n        0x9d95b3df,\n        0x650a7354,\n        0x8baf63de,\n        0x766a0abb,\n        0x3c77b2a8,\n        0x81c2c92e,\n        0x47edaee6,\n        0x92722c85,\n        0x1482353b,\n        0xa2bfe8a1,\n        0x4cf10364,\n        0xa81a664b,\n        0xbc423001,\n        0xc24b8b70,\n        0xd0f89791,\n        0xc76c51a3,\n        0x0654be30,\n        0xd192e819,\n        0xd6ef5218,\n        0xd6990624,\n        0x5565a910,\n        0xf40e3585,\n        0x5771202a,\n        0x106aa070,\n        0x32bbd1b8,\n        0x19a4c116,\n        0xb8d2d0c8,\n        0x1e376c08,\n        0x5141ab53,\n        0x2748774c,\n        0xdf8eeb99,\n        0x34b0bcb5,\n        0xe19b48a8,\n        0x391c0cb3,\n        0xc5c95a63,\n        0x4ed8aa4a,\n        0xe3418acb,\n        0x5b9cca4f,\n        0x7763e373,\n        0x682e6ff3,\n        0xd6b2b8a3,\n        0x748f82ee,\n        0x5defb2fc,\n        0x78a5636f,\n        0x43172f60,\n        0x84c87814,\n        0xa1f0ab72,\n        0x8cc70208,\n        0x1a6439ec,\n        0x90befffa,\n        0x23631e28,\n        0xa4506ceb,\n        0xde82bde9,\n        0xbef9a3f7,\n        0xb2c67915,\n        0xc67178f2,\n        0xe372532b,\n        0xca273ece,\n        0xea26619c,\n        0xd186b8c7,\n        0x21c0c207,\n        0xeada7dd6,\n        0xcde0eb1e,\n        0xf57d4f7f,\n        0xee6ed178,\n        0x06f067aa,\n        0x72176fba,\n        0x0a637dc5,\n        0xa2c898a6,\n        0x113f9804,\n        0xbef90dae,\n        0x1b710b35,\n        0x131c471b,\n        0x28db77f5,\n        0x23047d84,\n        0x32caab7b,\n        0x40c72493,\n        0x3c9ebe0a,\n        0x15c9bebc,\n        0x431d67c4,\n        0x9c100d4c,\n        0x4cc5d4be,\n        0xcb3e42b6,\n        0x597f299c,\n        0xfc657e2a,\n        0x5fcb6fab,\n        0x3ad6faec,\n        0x6c44198c,\n        0x4a475817\n    ];\n    function crypto_hashblocks_hl(hh, hl, m, n) {\n        var wh = new Int32Array(16), wl = new Int32Array(16), bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7, bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7, th, tl, i, j, h, l, a, b, c, d;\n        var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];\n        var pos = 0;\n        while(n >= 128){\n            for(i = 0; i < 16; i++){\n                j = 8 * i + pos;\n                wh[i] = m[j + 0] << 24 | m[j + 1] << 16 | m[j + 2] << 8 | m[j + 3];\n                wl[i] = m[j + 4] << 24 | m[j + 5] << 16 | m[j + 6] << 8 | m[j + 7];\n            }\n            for(i = 0; i < 80; i++){\n                bh0 = ah0;\n                bh1 = ah1;\n                bh2 = ah2;\n                bh3 = ah3;\n                bh4 = ah4;\n                bh5 = ah5;\n                bh6 = ah6;\n                bh7 = ah7;\n                bl0 = al0;\n                bl1 = al1;\n                bl2 = al2;\n                bl3 = al3;\n                bl4 = al4;\n                bl5 = al5;\n                bl6 = al6;\n                bl7 = al7;\n                // add\n                h = ah7;\n                l = al7;\n                a = l & 0xffff;\n                b = l >>> 16;\n                c = h & 0xffff;\n                d = h >>> 16;\n                // Sigma1\n                h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));\n                l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // Ch\n                h = ah4 & ah5 ^ ~ah4 & ah6;\n                l = al4 & al5 ^ ~al4 & al6;\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // K\n                h = K[i * 2];\n                l = K[i * 2 + 1];\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // w\n                h = wh[i % 16];\n                l = wl[i % 16];\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                b += a >>> 16;\n                c += b >>> 16;\n                d += c >>> 16;\n                th = c & 0xffff | d << 16;\n                tl = a & 0xffff | b << 16;\n                // add\n                h = th;\n                l = tl;\n                a = l & 0xffff;\n                b = l >>> 16;\n                c = h & 0xffff;\n                d = h >>> 16;\n                // Sigma0\n                h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));\n                l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // Maj\n                h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;\n                l = al0 & al1 ^ al0 & al2 ^ al1 & al2;\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                b += a >>> 16;\n                c += b >>> 16;\n                d += c >>> 16;\n                bh7 = c & 0xffff | d << 16;\n                bl7 = a & 0xffff | b << 16;\n                // add\n                h = bh3;\n                l = bl3;\n                a = l & 0xffff;\n                b = l >>> 16;\n                c = h & 0xffff;\n                d = h >>> 16;\n                h = th;\n                l = tl;\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                b += a >>> 16;\n                c += b >>> 16;\n                d += c >>> 16;\n                bh3 = c & 0xffff | d << 16;\n                bl3 = a & 0xffff | b << 16;\n                ah1 = bh0;\n                ah2 = bh1;\n                ah3 = bh2;\n                ah4 = bh3;\n                ah5 = bh4;\n                ah6 = bh5;\n                ah7 = bh6;\n                ah0 = bh7;\n                al1 = bl0;\n                al2 = bl1;\n                al3 = bl2;\n                al4 = bl3;\n                al5 = bl4;\n                al6 = bl5;\n                al7 = bl6;\n                al0 = bl7;\n                if (i % 16 === 15) {\n                    for(j = 0; j < 16; j++){\n                        // add\n                        h = wh[j];\n                        l = wl[j];\n                        a = l & 0xffff;\n                        b = l >>> 16;\n                        c = h & 0xffff;\n                        d = h >>> 16;\n                        h = wh[(j + 9) % 16];\n                        l = wl[(j + 9) % 16];\n                        a += l & 0xffff;\n                        b += l >>> 16;\n                        c += h & 0xffff;\n                        d += h >>> 16;\n                        // sigma0\n                        th = wh[(j + 1) % 16];\n                        tl = wl[(j + 1) % 16];\n                        h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;\n                        l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);\n                        a += l & 0xffff;\n                        b += l >>> 16;\n                        c += h & 0xffff;\n                        d += h >>> 16;\n                        // sigma1\n                        th = wh[(j + 14) % 16];\n                        tl = wl[(j + 14) % 16];\n                        h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;\n                        l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);\n                        a += l & 0xffff;\n                        b += l >>> 16;\n                        c += h & 0xffff;\n                        d += h >>> 16;\n                        b += a >>> 16;\n                        c += b >>> 16;\n                        d += c >>> 16;\n                        wh[j] = c & 0xffff | d << 16;\n                        wl[j] = a & 0xffff | b << 16;\n                    }\n                }\n            }\n            // add\n            h = ah0;\n            l = al0;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[0];\n            l = hl[0];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[0] = ah0 = c & 0xffff | d << 16;\n            hl[0] = al0 = a & 0xffff | b << 16;\n            h = ah1;\n            l = al1;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[1];\n            l = hl[1];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[1] = ah1 = c & 0xffff | d << 16;\n            hl[1] = al1 = a & 0xffff | b << 16;\n            h = ah2;\n            l = al2;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[2];\n            l = hl[2];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[2] = ah2 = c & 0xffff | d << 16;\n            hl[2] = al2 = a & 0xffff | b << 16;\n            h = ah3;\n            l = al3;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[3];\n            l = hl[3];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[3] = ah3 = c & 0xffff | d << 16;\n            hl[3] = al3 = a & 0xffff | b << 16;\n            h = ah4;\n            l = al4;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[4];\n            l = hl[4];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[4] = ah4 = c & 0xffff | d << 16;\n            hl[4] = al4 = a & 0xffff | b << 16;\n            h = ah5;\n            l = al5;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[5];\n            l = hl[5];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[5] = ah5 = c & 0xffff | d << 16;\n            hl[5] = al5 = a & 0xffff | b << 16;\n            h = ah6;\n            l = al6;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[6];\n            l = hl[6];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[6] = ah6 = c & 0xffff | d << 16;\n            hl[6] = al6 = a & 0xffff | b << 16;\n            h = ah7;\n            l = al7;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[7];\n            l = hl[7];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[7] = ah7 = c & 0xffff | d << 16;\n            hl[7] = al7 = a & 0xffff | b << 16;\n            pos += 128;\n            n -= 128;\n        }\n        return n;\n    }\n    function crypto_hash(out, m, n) {\n        var hh = new Int32Array(8), hl = new Int32Array(8), x = new Uint8Array(256), i, b = n;\n        hh[0] = 0x6a09e667;\n        hh[1] = 0xbb67ae85;\n        hh[2] = 0x3c6ef372;\n        hh[3] = 0xa54ff53a;\n        hh[4] = 0x510e527f;\n        hh[5] = 0x9b05688c;\n        hh[6] = 0x1f83d9ab;\n        hh[7] = 0x5be0cd19;\n        hl[0] = 0xf3bcc908;\n        hl[1] = 0x84caa73b;\n        hl[2] = 0xfe94f82b;\n        hl[3] = 0x5f1d36f1;\n        hl[4] = 0xade682d1;\n        hl[5] = 0x2b3e6c1f;\n        hl[6] = 0xfb41bd6b;\n        hl[7] = 0x137e2179;\n        crypto_hashblocks_hl(hh, hl, m, n);\n        n %= 128;\n        for(i = 0; i < n; i++)x[i] = m[b - n + i];\n        x[n] = 128;\n        n = 256 - 128 * (n < 112 ? 1 : 0);\n        x[n - 9] = 0;\n        ts64(x, n - 8, b / 0x20000000 | 0, b << 3);\n        crypto_hashblocks_hl(hh, hl, x, n);\n        for(i = 0; i < 8; i++)ts64(out, 8 * i, hh[i], hl[i]);\n        return 0;\n    }\n    function add(p, q) {\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\n        Z(a, p[1], p[0]);\n        Z(t, q[1], q[0]);\n        M(a, a, t);\n        A(b, p[0], p[1]);\n        A(t, q[0], q[1]);\n        M(b, b, t);\n        M(c, p[3], q[3]);\n        M(c, c, D2);\n        M(d, p[2], q[2]);\n        A(d, d, d);\n        Z(e, b, a);\n        Z(f, d, c);\n        A(g, d, c);\n        A(h, b, a);\n        M(p[0], e, f);\n        M(p[1], h, g);\n        M(p[2], g, f);\n        M(p[3], e, h);\n    }\n    function cswap(p, q, b) {\n        var i;\n        for(i = 0; i < 4; i++){\n            sel25519(p[i], q[i], b);\n        }\n    }\n    function pack(r, p) {\n        var tx = gf(), ty = gf(), zi = gf();\n        inv25519(zi, p[2]);\n        M(tx, p[0], zi);\n        M(ty, p[1], zi);\n        pack25519(r, ty);\n        r[31] ^= par25519(tx) << 7;\n    }\n    function scalarmult(p, q, s) {\n        var b, i;\n        set25519(p[0], gf0);\n        set25519(p[1], gf1);\n        set25519(p[2], gf1);\n        set25519(p[3], gf0);\n        for(i = 255; i >= 0; --i){\n            b = s[i / 8 | 0] >> (i & 7) & 1;\n            cswap(p, q, b);\n            add(q, p);\n            add(p, p);\n            cswap(p, q, b);\n        }\n    }\n    function scalarbase(p, s) {\n        var q = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        set25519(q[0], X);\n        set25519(q[1], Y);\n        set25519(q[2], gf1);\n        M(q[3], X, Y);\n        scalarmult(p, q, s);\n    }\n    function crypto_sign_keypair(pk, sk, seeded) {\n        var d = new Uint8Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        var i;\n        if (!seeded) randombytes(sk, 32);\n        crypto_hash(d, sk, 32);\n        d[0] &= 248;\n        d[31] &= 127;\n        d[31] |= 64;\n        scalarbase(p, d);\n        pack(pk, p);\n        for(i = 0; i < 32; i++)sk[i + 32] = pk[i];\n        return 0;\n    }\n    var L = new Float64Array([\n        0xed,\n        0xd3,\n        0xf5,\n        0x5c,\n        0x1a,\n        0x63,\n        0x12,\n        0x58,\n        0xd6,\n        0x9c,\n        0xf7,\n        0xa2,\n        0xde,\n        0xf9,\n        0xde,\n        0x14,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0x10\n    ]);\n    function modL(r, x) {\n        var carry, i, j, k;\n        for(i = 63; i >= 32; --i){\n            carry = 0;\n            for(j = i - 32, k = i - 12; j < k; ++j){\n                x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n                carry = Math.floor((x[j] + 128) / 256);\n                x[j] -= carry * 256;\n            }\n            x[j] += carry;\n            x[i] = 0;\n        }\n        carry = 0;\n        for(j = 0; j < 32; j++){\n            x[j] += carry - (x[31] >> 4) * L[j];\n            carry = x[j] >> 8;\n            x[j] &= 255;\n        }\n        for(j = 0; j < 32; j++)x[j] -= carry * L[j];\n        for(i = 0; i < 32; i++){\n            x[i + 1] += x[i] >> 8;\n            r[i] = x[i] & 255;\n        }\n    }\n    function reduce(r) {\n        var x = new Float64Array(64), i;\n        for(i = 0; i < 64; i++)x[i] = r[i];\n        for(i = 0; i < 64; i++)r[i] = 0;\n        modL(r, x);\n    }\n    // Note: difference from C - smlen returned, not passed as argument.\n    function crypto_sign(sm, m, n, sk) {\n        var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n        var i, j, x = new Float64Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        crypto_hash(d, sk, 32);\n        d[0] &= 248;\n        d[31] &= 127;\n        d[31] |= 64;\n        var smlen = n + 64;\n        for(i = 0; i < n; i++)sm[64 + i] = m[i];\n        for(i = 0; i < 32; i++)sm[32 + i] = d[32 + i];\n        crypto_hash(r, sm.subarray(32), n + 32);\n        reduce(r);\n        scalarbase(p, r);\n        pack(sm, p);\n        for(i = 32; i < 64; i++)sm[i] = sk[i];\n        crypto_hash(h, sm, n + 64);\n        reduce(h);\n        for(i = 0; i < 64; i++)x[i] = 0;\n        for(i = 0; i < 32; i++)x[i] = r[i];\n        for(i = 0; i < 32; i++){\n            for(j = 0; j < 32; j++){\n                x[i + j] += h[i] * d[j];\n            }\n        }\n        modL(sm.subarray(32), x);\n        return smlen;\n    }\n    function unpackneg(r, p) {\n        var t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\n        set25519(r[2], gf1);\n        unpack25519(r[1], p);\n        S(num, r[1]);\n        M(den, num, D);\n        Z(num, num, r[2]);\n        A(den, r[2], den);\n        S(den2, den);\n        S(den4, den2);\n        M(den6, den4, den2);\n        M(t, den6, num);\n        M(t, t, den);\n        pow2523(t, t);\n        M(t, t, num);\n        M(t, t, den);\n        M(t, t, den);\n        M(r[0], t, den);\n        S(chk, r[0]);\n        M(chk, chk, den);\n        if (neq25519(chk, num)) M(r[0], r[0], I);\n        S(chk, r[0]);\n        M(chk, chk, den);\n        if (neq25519(chk, num)) return -1;\n        if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n        M(r[3], r[0], r[1]);\n        return 0;\n    }\n    function crypto_sign_open(m, sm, n, pk) {\n        var i;\n        var t = new Uint8Array(32), h = new Uint8Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ], q = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        if (n < 64) return -1;\n        if (unpackneg(q, pk)) return -1;\n        for(i = 0; i < n; i++)m[i] = sm[i];\n        for(i = 0; i < 32; i++)m[i + 32] = pk[i];\n        crypto_hash(h, m, n);\n        reduce(h);\n        scalarmult(p, q, h);\n        scalarbase(q, sm.subarray(32));\n        add(p, q);\n        pack(t, p);\n        n -= 64;\n        if (crypto_verify_32(sm, 0, t, 0)) {\n            for(i = 0; i < n; i++)m[i] = 0;\n            return -1;\n        }\n        for(i = 0; i < n; i++)m[i] = sm[i + 64];\n        return n;\n    }\n    var crypto_secretbox_KEYBYTES = 32, crypto_secretbox_NONCEBYTES = 24, crypto_secretbox_ZEROBYTES = 32, crypto_secretbox_BOXZEROBYTES = 16, crypto_scalarmult_BYTES = 32, crypto_scalarmult_SCALARBYTES = 32, crypto_box_PUBLICKEYBYTES = 32, crypto_box_SECRETKEYBYTES = 32, crypto_box_BEFORENMBYTES = 32, crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES, crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES, crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES, crypto_sign_BYTES = 64, crypto_sign_PUBLICKEYBYTES = 32, crypto_sign_SECRETKEYBYTES = 64, crypto_sign_SEEDBYTES = 32, crypto_hash_BYTES = 64;\n    nacl.lowlevel = {\n        crypto_core_hsalsa20: crypto_core_hsalsa20,\n        crypto_stream_xor: crypto_stream_xor,\n        crypto_stream: crypto_stream,\n        crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n        crypto_stream_salsa20: crypto_stream_salsa20,\n        crypto_onetimeauth: crypto_onetimeauth,\n        crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n        crypto_verify_16: crypto_verify_16,\n        crypto_verify_32: crypto_verify_32,\n        crypto_secretbox: crypto_secretbox,\n        crypto_secretbox_open: crypto_secretbox_open,\n        crypto_scalarmult: crypto_scalarmult,\n        crypto_scalarmult_base: crypto_scalarmult_base,\n        crypto_box_beforenm: crypto_box_beforenm,\n        crypto_box_afternm: crypto_box_afternm,\n        crypto_box: crypto_box,\n        crypto_box_open: crypto_box_open,\n        crypto_box_keypair: crypto_box_keypair,\n        crypto_hash: crypto_hash,\n        crypto_sign: crypto_sign,\n        crypto_sign_keypair: crypto_sign_keypair,\n        crypto_sign_open: crypto_sign_open,\n        crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n        crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n        crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n        crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n        crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n        crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n        crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n        crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n        crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n        crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n        crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n        crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n        crypto_sign_BYTES: crypto_sign_BYTES,\n        crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n        crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n        crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n        crypto_hash_BYTES: crypto_hash_BYTES,\n        gf: gf,\n        D: D,\n        L: L,\n        pack25519: pack25519,\n        unpack25519: unpack25519,\n        M: M,\n        A: A,\n        S: S,\n        Z: Z,\n        pow2523: pow2523,\n        add: add,\n        set25519: set25519,\n        modL: modL,\n        scalarmult: scalarmult,\n        scalarbase: scalarbase\n    };\n    /* High-level API */ function checkLengths(k, n) {\n        if (k.length !== crypto_secretbox_KEYBYTES) throw new Error(\"bad key size\");\n        if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error(\"bad nonce size\");\n    }\n    function checkBoxLengths(pk, sk) {\n        if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error(\"bad public key size\");\n        if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n    }\n    function checkArrayTypes() {\n        for(var i = 0; i < arguments.length; i++){\n            if (!(arguments[i] instanceof Uint8Array)) throw new TypeError(\"unexpected type, use Uint8Array\");\n        }\n    }\n    function cleanup(arr) {\n        for(var i = 0; i < arr.length; i++)arr[i] = 0;\n    }\n    nacl.randomBytes = function(n) {\n        var b = new Uint8Array(n);\n        randombytes(b, n);\n        return b;\n    };\n    nacl.secretbox = function(msg, nonce, key) {\n        checkArrayTypes(msg, nonce, key);\n        checkLengths(key, nonce);\n        var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n        var c = new Uint8Array(m.length);\n        for(var i = 0; i < msg.length; i++)m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n        crypto_secretbox(c, m, m.length, nonce, key);\n        return c.subarray(crypto_secretbox_BOXZEROBYTES);\n    };\n    nacl.secretbox.open = function(box, nonce, key) {\n        checkArrayTypes(box, nonce, key);\n        checkLengths(key, nonce);\n        var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n        var m = new Uint8Array(c.length);\n        for(var i = 0; i < box.length; i++)c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n        if (c.length < 32) return null;\n        if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n        return m.subarray(crypto_secretbox_ZEROBYTES);\n    };\n    nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\n    nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\n    nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n    nacl.scalarMult = function(n, p) {\n        checkArrayTypes(n, p);\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error(\"bad n size\");\n        if (p.length !== crypto_scalarmult_BYTES) throw new Error(\"bad p size\");\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\n        crypto_scalarmult(q, n, p);\n        return q;\n    };\n    nacl.scalarMult.base = function(n) {\n        checkArrayTypes(n);\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error(\"bad n size\");\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\n        crypto_scalarmult_base(q, n);\n        return q;\n    };\n    nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\n    nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n    nacl.box = function(msg, nonce, publicKey, secretKey) {\n        var k = nacl.box.before(publicKey, secretKey);\n        return nacl.secretbox(msg, nonce, k);\n    };\n    nacl.box.before = function(publicKey, secretKey) {\n        checkArrayTypes(publicKey, secretKey);\n        checkBoxLengths(publicKey, secretKey);\n        var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n        crypto_box_beforenm(k, publicKey, secretKey);\n        return k;\n    };\n    nacl.box.after = nacl.secretbox;\n    nacl.box.open = function(msg, nonce, publicKey, secretKey) {\n        var k = nacl.box.before(publicKey, secretKey);\n        return nacl.secretbox.open(msg, nonce, k);\n    };\n    nacl.box.open.after = nacl.secretbox.open;\n    nacl.box.keyPair = function() {\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n        crypto_box_keypair(pk, sk);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.box.keyPair.fromSecretKey = function(secretKey) {\n        checkArrayTypes(secretKey);\n        if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n        crypto_scalarmult_base(pk, secretKey);\n        return {\n            publicKey: pk,\n            secretKey: new Uint8Array(secretKey)\n        };\n    };\n    nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\n    nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\n    nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\n    nacl.box.nonceLength = crypto_box_NONCEBYTES;\n    nacl.box.overheadLength = nacl.secretbox.overheadLength;\n    nacl.sign = function(msg, secretKey) {\n        checkArrayTypes(msg, secretKey);\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n        var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);\n        crypto_sign(signedMsg, msg, msg.length, secretKey);\n        return signedMsg;\n    };\n    nacl.sign.open = function(signedMsg, publicKey) {\n        checkArrayTypes(signedMsg, publicKey);\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error(\"bad public key size\");\n        var tmp = new Uint8Array(signedMsg.length);\n        var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n        if (mlen < 0) return null;\n        var m = new Uint8Array(mlen);\n        for(var i = 0; i < m.length; i++)m[i] = tmp[i];\n        return m;\n    };\n    nacl.sign.detached = function(msg, secretKey) {\n        var signedMsg = nacl.sign(msg, secretKey);\n        var sig = new Uint8Array(crypto_sign_BYTES);\n        for(var i = 0; i < sig.length; i++)sig[i] = signedMsg[i];\n        return sig;\n    };\n    nacl.sign.detached.verify = function(msg, sig, publicKey) {\n        checkArrayTypes(msg, sig, publicKey);\n        if (sig.length !== crypto_sign_BYTES) throw new Error(\"bad signature size\");\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error(\"bad public key size\");\n        var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n        var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n        var i;\n        for(i = 0; i < crypto_sign_BYTES; i++)sm[i] = sig[i];\n        for(i = 0; i < msg.length; i++)sm[i + crypto_sign_BYTES] = msg[i];\n        return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;\n    };\n    nacl.sign.keyPair = function() {\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n        crypto_sign_keypair(pk, sk);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.sign.keyPair.fromSecretKey = function(secretKey) {\n        checkArrayTypes(secretKey);\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        for(var i = 0; i < pk.length; i++)pk[i] = secretKey[32 + i];\n        return {\n            publicKey: pk,\n            secretKey: new Uint8Array(secretKey)\n        };\n    };\n    nacl.sign.keyPair.fromSeed = function(seed) {\n        checkArrayTypes(seed);\n        if (seed.length !== crypto_sign_SEEDBYTES) throw new Error(\"bad seed size\");\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n        for(var i = 0; i < 32; i++)sk[i] = seed[i];\n        crypto_sign_keypair(pk, sk, true);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\n    nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\n    nacl.sign.seedLength = crypto_sign_SEEDBYTES;\n    nacl.sign.signatureLength = crypto_sign_BYTES;\n    nacl.hash = function(msg) {\n        checkArrayTypes(msg);\n        var h = new Uint8Array(crypto_hash_BYTES);\n        crypto_hash(h, msg, msg.length);\n        return h;\n    };\n    nacl.hash.hashLength = crypto_hash_BYTES;\n    nacl.verify = function(x, y) {\n        checkArrayTypes(x, y);\n        // Zero length arguments are considered not equal.\n        if (x.length === 0 || y.length === 0) return false;\n        if (x.length !== y.length) return false;\n        return vn(x, 0, y, 0, x.length) === 0 ? true : false;\n    };\n    nacl.setPRNG = function(fn) {\n        randombytes = fn;\n    };\n    (function() {\n        // Initialize PRNG if environment provides CSPRNG.\n        // If not, methods calling randombytes will throw.\n        var crypto = typeof self !== \"undefined\" ? self.crypto || self.msCrypto : null;\n        if (crypto && crypto.getRandomValues) {\n            // Browsers.\n            var QUOTA = 65536;\n            nacl.setPRNG(function(x, n) {\n                var i, v = new Uint8Array(n);\n                for(i = 0; i < n; i += QUOTA){\n                    crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n                }\n                for(i = 0; i < n; i++)x[i] = v[i];\n                cleanup(v);\n            });\n        } else if (true) {\n            // Node.js.\n            crypto = __webpack_require__(/*! crypto */ \"crypto\");\n            if (crypto && crypto.randomBytes) {\n                nacl.setPRNG(function(x, n) {\n                    var i, v = crypto.randomBytes(n);\n                    for(i = 0; i < n; i++)x[i] = v[i];\n                    cleanup(v);\n                });\n            }\n        }\n    })();\n})( true && module.exports ? module.exports : self.nacl = self.nacl || {});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tweetnacl/nacl-fast.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/tweetnacl/nacl-fast.js":
/*!*********************************************!*\
  !*** ./node_modules/tweetnacl/nacl-fast.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("(function(nacl) {\n    \"use strict\";\n    // Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n    // Public domain.\n    //\n    // Implementation derived from TweetNaCl version 20140427.\n    // See for details: http://tweetnacl.cr.yp.to/\n    var gf = function(init) {\n        var i, r = new Float64Array(16);\n        if (init) for(i = 0; i < init.length; i++)r[i] = init[i];\n        return r;\n    };\n    //  Pluggable, initialized in high-level API below.\n    var randombytes = function() {\n        throw new Error(\"no PRNG\");\n    };\n    var _0 = new Uint8Array(16);\n    var _9 = new Uint8Array(32);\n    _9[0] = 9;\n    var gf0 = gf(), gf1 = gf([\n        1\n    ]), _121665 = gf([\n        0xdb41,\n        1\n    ]), D = gf([\n        0x78a3,\n        0x1359,\n        0x4dca,\n        0x75eb,\n        0xd8ab,\n        0x4141,\n        0x0a4d,\n        0x0070,\n        0xe898,\n        0x7779,\n        0x4079,\n        0x8cc7,\n        0xfe73,\n        0x2b6f,\n        0x6cee,\n        0x5203\n    ]), D2 = gf([\n        0xf159,\n        0x26b2,\n        0x9b94,\n        0xebd6,\n        0xb156,\n        0x8283,\n        0x149a,\n        0x00e0,\n        0xd130,\n        0xeef3,\n        0x80f2,\n        0x198e,\n        0xfce7,\n        0x56df,\n        0xd9dc,\n        0x2406\n    ]), X = gf([\n        0xd51a,\n        0x8f25,\n        0x2d60,\n        0xc956,\n        0xa7b2,\n        0x9525,\n        0xc760,\n        0x692c,\n        0xdc5c,\n        0xfdd6,\n        0xe231,\n        0xc0a4,\n        0x53fe,\n        0xcd6e,\n        0x36d3,\n        0x2169\n    ]), Y = gf([\n        0x6658,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666\n    ]), I = gf([\n        0xa0b0,\n        0x4a0e,\n        0x1b27,\n        0xc4ee,\n        0xe478,\n        0xad2f,\n        0x1806,\n        0x2f43,\n        0xd7a7,\n        0x3dfb,\n        0x0099,\n        0x2b4d,\n        0xdf0b,\n        0x4fc1,\n        0x2480,\n        0x2b83\n    ]);\n    function ts64(x, i, h, l) {\n        x[i] = h >> 24 & 0xff;\n        x[i + 1] = h >> 16 & 0xff;\n        x[i + 2] = h >> 8 & 0xff;\n        x[i + 3] = h & 0xff;\n        x[i + 4] = l >> 24 & 0xff;\n        x[i + 5] = l >> 16 & 0xff;\n        x[i + 6] = l >> 8 & 0xff;\n        x[i + 7] = l & 0xff;\n    }\n    function vn(x, xi, y, yi, n) {\n        var i, d = 0;\n        for(i = 0; i < n; i++)d |= x[xi + i] ^ y[yi + i];\n        return (1 & d - 1 >>> 8) - 1;\n    }\n    function crypto_verify_16(x, xi, y, yi) {\n        return vn(x, xi, y, yi, 16);\n    }\n    function crypto_verify_32(x, xi, y, yi) {\n        return vn(x, xi, y, yi, 32);\n    }\n    function core_salsa20(o, p, k, c) {\n        var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24, j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24, j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24, j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24, j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24, j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24, j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24, j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24, j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24, j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24, j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24, j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24, j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24, j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24, j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24, j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;\n        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;\n        for(var i = 0; i < 20; i += 2){\n            u = x0 + x12 | 0;\n            x4 ^= u << 7 | u >>> 32 - 7;\n            u = x4 + x0 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x4 | 0;\n            x12 ^= u << 13 | u >>> 32 - 13;\n            u = x12 + x8 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x1 | 0;\n            x9 ^= u << 7 | u >>> 32 - 7;\n            u = x9 + x5 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x9 | 0;\n            x1 ^= u << 13 | u >>> 32 - 13;\n            u = x1 + x13 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x6 | 0;\n            x14 ^= u << 7 | u >>> 32 - 7;\n            u = x14 + x10 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x14 | 0;\n            x6 ^= u << 13 | u >>> 32 - 13;\n            u = x6 + x2 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x11 | 0;\n            x3 ^= u << 7 | u >>> 32 - 7;\n            u = x3 + x15 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x3 | 0;\n            x11 ^= u << 13 | u >>> 32 - 13;\n            u = x11 + x7 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n            u = x0 + x3 | 0;\n            x1 ^= u << 7 | u >>> 32 - 7;\n            u = x1 + x0 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x1 | 0;\n            x3 ^= u << 13 | u >>> 32 - 13;\n            u = x3 + x2 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x4 | 0;\n            x6 ^= u << 7 | u >>> 32 - 7;\n            u = x6 + x5 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x6 | 0;\n            x4 ^= u << 13 | u >>> 32 - 13;\n            u = x4 + x7 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x9 | 0;\n            x11 ^= u << 7 | u >>> 32 - 7;\n            u = x11 + x10 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x11 | 0;\n            x9 ^= u << 13 | u >>> 32 - 13;\n            u = x9 + x8 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x14 | 0;\n            x12 ^= u << 7 | u >>> 32 - 7;\n            u = x12 + x15 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x12 | 0;\n            x14 ^= u << 13 | u >>> 32 - 13;\n            u = x14 + x13 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n        }\n        x0 = x0 + j0 | 0;\n        x1 = x1 + j1 | 0;\n        x2 = x2 + j2 | 0;\n        x3 = x3 + j3 | 0;\n        x4 = x4 + j4 | 0;\n        x5 = x5 + j5 | 0;\n        x6 = x6 + j6 | 0;\n        x7 = x7 + j7 | 0;\n        x8 = x8 + j8 | 0;\n        x9 = x9 + j9 | 0;\n        x10 = x10 + j10 | 0;\n        x11 = x11 + j11 | 0;\n        x12 = x12 + j12 | 0;\n        x13 = x13 + j13 | 0;\n        x14 = x14 + j14 | 0;\n        x15 = x15 + j15 | 0;\n        o[0] = x0 >>> 0 & 0xff;\n        o[1] = x0 >>> 8 & 0xff;\n        o[2] = x0 >>> 16 & 0xff;\n        o[3] = x0 >>> 24 & 0xff;\n        o[4] = x1 >>> 0 & 0xff;\n        o[5] = x1 >>> 8 & 0xff;\n        o[6] = x1 >>> 16 & 0xff;\n        o[7] = x1 >>> 24 & 0xff;\n        o[8] = x2 >>> 0 & 0xff;\n        o[9] = x2 >>> 8 & 0xff;\n        o[10] = x2 >>> 16 & 0xff;\n        o[11] = x2 >>> 24 & 0xff;\n        o[12] = x3 >>> 0 & 0xff;\n        o[13] = x3 >>> 8 & 0xff;\n        o[14] = x3 >>> 16 & 0xff;\n        o[15] = x3 >>> 24 & 0xff;\n        o[16] = x4 >>> 0 & 0xff;\n        o[17] = x4 >>> 8 & 0xff;\n        o[18] = x4 >>> 16 & 0xff;\n        o[19] = x4 >>> 24 & 0xff;\n        o[20] = x5 >>> 0 & 0xff;\n        o[21] = x5 >>> 8 & 0xff;\n        o[22] = x5 >>> 16 & 0xff;\n        o[23] = x5 >>> 24 & 0xff;\n        o[24] = x6 >>> 0 & 0xff;\n        o[25] = x6 >>> 8 & 0xff;\n        o[26] = x6 >>> 16 & 0xff;\n        o[27] = x6 >>> 24 & 0xff;\n        o[28] = x7 >>> 0 & 0xff;\n        o[29] = x7 >>> 8 & 0xff;\n        o[30] = x7 >>> 16 & 0xff;\n        o[31] = x7 >>> 24 & 0xff;\n        o[32] = x8 >>> 0 & 0xff;\n        o[33] = x8 >>> 8 & 0xff;\n        o[34] = x8 >>> 16 & 0xff;\n        o[35] = x8 >>> 24 & 0xff;\n        o[36] = x9 >>> 0 & 0xff;\n        o[37] = x9 >>> 8 & 0xff;\n        o[38] = x9 >>> 16 & 0xff;\n        o[39] = x9 >>> 24 & 0xff;\n        o[40] = x10 >>> 0 & 0xff;\n        o[41] = x10 >>> 8 & 0xff;\n        o[42] = x10 >>> 16 & 0xff;\n        o[43] = x10 >>> 24 & 0xff;\n        o[44] = x11 >>> 0 & 0xff;\n        o[45] = x11 >>> 8 & 0xff;\n        o[46] = x11 >>> 16 & 0xff;\n        o[47] = x11 >>> 24 & 0xff;\n        o[48] = x12 >>> 0 & 0xff;\n        o[49] = x12 >>> 8 & 0xff;\n        o[50] = x12 >>> 16 & 0xff;\n        o[51] = x12 >>> 24 & 0xff;\n        o[52] = x13 >>> 0 & 0xff;\n        o[53] = x13 >>> 8 & 0xff;\n        o[54] = x13 >>> 16 & 0xff;\n        o[55] = x13 >>> 24 & 0xff;\n        o[56] = x14 >>> 0 & 0xff;\n        o[57] = x14 >>> 8 & 0xff;\n        o[58] = x14 >>> 16 & 0xff;\n        o[59] = x14 >>> 24 & 0xff;\n        o[60] = x15 >>> 0 & 0xff;\n        o[61] = x15 >>> 8 & 0xff;\n        o[62] = x15 >>> 16 & 0xff;\n        o[63] = x15 >>> 24 & 0xff;\n    }\n    function core_hsalsa20(o, p, k, c) {\n        var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24, j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24, j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24, j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24, j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24, j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24, j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24, j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24, j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24, j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24, j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24, j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24, j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24, j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24, j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24, j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;\n        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;\n        for(var i = 0; i < 20; i += 2){\n            u = x0 + x12 | 0;\n            x4 ^= u << 7 | u >>> 32 - 7;\n            u = x4 + x0 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x4 | 0;\n            x12 ^= u << 13 | u >>> 32 - 13;\n            u = x12 + x8 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x1 | 0;\n            x9 ^= u << 7 | u >>> 32 - 7;\n            u = x9 + x5 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x9 | 0;\n            x1 ^= u << 13 | u >>> 32 - 13;\n            u = x1 + x13 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x6 | 0;\n            x14 ^= u << 7 | u >>> 32 - 7;\n            u = x14 + x10 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x14 | 0;\n            x6 ^= u << 13 | u >>> 32 - 13;\n            u = x6 + x2 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x11 | 0;\n            x3 ^= u << 7 | u >>> 32 - 7;\n            u = x3 + x15 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x3 | 0;\n            x11 ^= u << 13 | u >>> 32 - 13;\n            u = x11 + x7 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n            u = x0 + x3 | 0;\n            x1 ^= u << 7 | u >>> 32 - 7;\n            u = x1 + x0 | 0;\n            x2 ^= u << 9 | u >>> 32 - 9;\n            u = x2 + x1 | 0;\n            x3 ^= u << 13 | u >>> 32 - 13;\n            u = x3 + x2 | 0;\n            x0 ^= u << 18 | u >>> 32 - 18;\n            u = x5 + x4 | 0;\n            x6 ^= u << 7 | u >>> 32 - 7;\n            u = x6 + x5 | 0;\n            x7 ^= u << 9 | u >>> 32 - 9;\n            u = x7 + x6 | 0;\n            x4 ^= u << 13 | u >>> 32 - 13;\n            u = x4 + x7 | 0;\n            x5 ^= u << 18 | u >>> 32 - 18;\n            u = x10 + x9 | 0;\n            x11 ^= u << 7 | u >>> 32 - 7;\n            u = x11 + x10 | 0;\n            x8 ^= u << 9 | u >>> 32 - 9;\n            u = x8 + x11 | 0;\n            x9 ^= u << 13 | u >>> 32 - 13;\n            u = x9 + x8 | 0;\n            x10 ^= u << 18 | u >>> 32 - 18;\n            u = x15 + x14 | 0;\n            x12 ^= u << 7 | u >>> 32 - 7;\n            u = x12 + x15 | 0;\n            x13 ^= u << 9 | u >>> 32 - 9;\n            u = x13 + x12 | 0;\n            x14 ^= u << 13 | u >>> 32 - 13;\n            u = x14 + x13 | 0;\n            x15 ^= u << 18 | u >>> 32 - 18;\n        }\n        o[0] = x0 >>> 0 & 0xff;\n        o[1] = x0 >>> 8 & 0xff;\n        o[2] = x0 >>> 16 & 0xff;\n        o[3] = x0 >>> 24 & 0xff;\n        o[4] = x5 >>> 0 & 0xff;\n        o[5] = x5 >>> 8 & 0xff;\n        o[6] = x5 >>> 16 & 0xff;\n        o[7] = x5 >>> 24 & 0xff;\n        o[8] = x10 >>> 0 & 0xff;\n        o[9] = x10 >>> 8 & 0xff;\n        o[10] = x10 >>> 16 & 0xff;\n        o[11] = x10 >>> 24 & 0xff;\n        o[12] = x15 >>> 0 & 0xff;\n        o[13] = x15 >>> 8 & 0xff;\n        o[14] = x15 >>> 16 & 0xff;\n        o[15] = x15 >>> 24 & 0xff;\n        o[16] = x6 >>> 0 & 0xff;\n        o[17] = x6 >>> 8 & 0xff;\n        o[18] = x6 >>> 16 & 0xff;\n        o[19] = x6 >>> 24 & 0xff;\n        o[20] = x7 >>> 0 & 0xff;\n        o[21] = x7 >>> 8 & 0xff;\n        o[22] = x7 >>> 16 & 0xff;\n        o[23] = x7 >>> 24 & 0xff;\n        o[24] = x8 >>> 0 & 0xff;\n        o[25] = x8 >>> 8 & 0xff;\n        o[26] = x8 >>> 16 & 0xff;\n        o[27] = x8 >>> 24 & 0xff;\n        o[28] = x9 >>> 0 & 0xff;\n        o[29] = x9 >>> 8 & 0xff;\n        o[30] = x9 >>> 16 & 0xff;\n        o[31] = x9 >>> 24 & 0xff;\n    }\n    function crypto_core_salsa20(out, inp, k, c) {\n        core_salsa20(out, inp, k, c);\n    }\n    function crypto_core_hsalsa20(out, inp, k, c) {\n        core_hsalsa20(out, inp, k, c);\n    }\n    var sigma = new Uint8Array([\n        101,\n        120,\n        112,\n        97,\n        110,\n        100,\n        32,\n        51,\n        50,\n        45,\n        98,\n        121,\n        116,\n        101,\n        32,\n        107\n    ]);\n    // \"expand 32-byte k\"\n    function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n        var z = new Uint8Array(16), x = new Uint8Array(64);\n        var u, i;\n        for(i = 0; i < 16; i++)z[i] = 0;\n        for(i = 0; i < 8; i++)z[i] = n[i];\n        while(b >= 64){\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < 64; i++)c[cpos + i] = m[mpos + i] ^ x[i];\n            u = 1;\n            for(i = 8; i < 16; i++){\n                u = u + (z[i] & 0xff) | 0;\n                z[i] = u & 0xff;\n                u >>>= 8;\n            }\n            b -= 64;\n            cpos += 64;\n            mpos += 64;\n        }\n        if (b > 0) {\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < b; i++)c[cpos + i] = m[mpos + i] ^ x[i];\n        }\n        return 0;\n    }\n    function crypto_stream_salsa20(c, cpos, b, n, k) {\n        var z = new Uint8Array(16), x = new Uint8Array(64);\n        var u, i;\n        for(i = 0; i < 16; i++)z[i] = 0;\n        for(i = 0; i < 8; i++)z[i] = n[i];\n        while(b >= 64){\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < 64; i++)c[cpos + i] = x[i];\n            u = 1;\n            for(i = 8; i < 16; i++){\n                u = u + (z[i] & 0xff) | 0;\n                z[i] = u & 0xff;\n                u >>>= 8;\n            }\n            b -= 64;\n            cpos += 64;\n        }\n        if (b > 0) {\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < b; i++)c[cpos + i] = x[i];\n        }\n        return 0;\n    }\n    function crypto_stream(c, cpos, d, n, k) {\n        var s = new Uint8Array(32);\n        crypto_core_hsalsa20(s, n, k, sigma);\n        var sn = new Uint8Array(8);\n        for(var i = 0; i < 8; i++)sn[i] = n[i + 16];\n        return crypto_stream_salsa20(c, cpos, d, sn, s);\n    }\n    function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n        var s = new Uint8Array(32);\n        crypto_core_hsalsa20(s, n, k, sigma);\n        var sn = new Uint8Array(8);\n        for(var i = 0; i < 8; i++)sn[i] = n[i + 16];\n        return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, sn, s);\n    }\n    /*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/ var poly1305 = function(key) {\n        this.buffer = new Uint8Array(16);\n        this.r = new Uint16Array(10);\n        this.h = new Uint16Array(10);\n        this.pad = new Uint16Array(8);\n        this.leftover = 0;\n        this.fin = 0;\n        var t0, t1, t2, t3, t4, t5, t6, t7;\n        t0 = key[0] & 0xff | (key[1] & 0xff) << 8;\n        this.r[0] = t0 & 0x1fff;\n        t1 = key[2] & 0xff | (key[3] & 0xff) << 8;\n        this.r[1] = (t0 >>> 13 | t1 << 3) & 0x1fff;\n        t2 = key[4] & 0xff | (key[5] & 0xff) << 8;\n        this.r[2] = (t1 >>> 10 | t2 << 6) & 0x1f03;\n        t3 = key[6] & 0xff | (key[7] & 0xff) << 8;\n        this.r[3] = (t2 >>> 7 | t3 << 9) & 0x1fff;\n        t4 = key[8] & 0xff | (key[9] & 0xff) << 8;\n        this.r[4] = (t3 >>> 4 | t4 << 12) & 0x00ff;\n        this.r[5] = t4 >>> 1 & 0x1ffe;\n        t5 = key[10] & 0xff | (key[11] & 0xff) << 8;\n        this.r[6] = (t4 >>> 14 | t5 << 2) & 0x1fff;\n        t6 = key[12] & 0xff | (key[13] & 0xff) << 8;\n        this.r[7] = (t5 >>> 11 | t6 << 5) & 0x1f81;\n        t7 = key[14] & 0xff | (key[15] & 0xff) << 8;\n        this.r[8] = (t6 >>> 8 | t7 << 8) & 0x1fff;\n        this.r[9] = t7 >>> 5 & 0x007f;\n        this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n        this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n        this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n        this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n        this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n        this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n        this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n        this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n    };\n    poly1305.prototype.blocks = function(m, mpos, bytes) {\n        var hibit = this.fin ? 0 : 1 << 11;\n        var t0, t1, t2, t3, t4, t5, t6, t7, c;\n        var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n        var h0 = this.h[0], h1 = this.h[1], h2 = this.h[2], h3 = this.h[3], h4 = this.h[4], h5 = this.h[5], h6 = this.h[6], h7 = this.h[7], h8 = this.h[8], h9 = this.h[9];\n        var r0 = this.r[0], r1 = this.r[1], r2 = this.r[2], r3 = this.r[3], r4 = this.r[4], r5 = this.r[5], r6 = this.r[6], r7 = this.r[7], r8 = this.r[8], r9 = this.r[9];\n        while(bytes >= 16){\n            t0 = m[mpos + 0] & 0xff | (m[mpos + 1] & 0xff) << 8;\n            h0 += t0 & 0x1fff;\n            t1 = m[mpos + 2] & 0xff | (m[mpos + 3] & 0xff) << 8;\n            h1 += (t0 >>> 13 | t1 << 3) & 0x1fff;\n            t2 = m[mpos + 4] & 0xff | (m[mpos + 5] & 0xff) << 8;\n            h2 += (t1 >>> 10 | t2 << 6) & 0x1fff;\n            t3 = m[mpos + 6] & 0xff | (m[mpos + 7] & 0xff) << 8;\n            h3 += (t2 >>> 7 | t3 << 9) & 0x1fff;\n            t4 = m[mpos + 8] & 0xff | (m[mpos + 9] & 0xff) << 8;\n            h4 += (t3 >>> 4 | t4 << 12) & 0x1fff;\n            h5 += t4 >>> 1 & 0x1fff;\n            t5 = m[mpos + 10] & 0xff | (m[mpos + 11] & 0xff) << 8;\n            h6 += (t4 >>> 14 | t5 << 2) & 0x1fff;\n            t6 = m[mpos + 12] & 0xff | (m[mpos + 13] & 0xff) << 8;\n            h7 += (t5 >>> 11 | t6 << 5) & 0x1fff;\n            t7 = m[mpos + 14] & 0xff | (m[mpos + 15] & 0xff) << 8;\n            h8 += (t6 >>> 8 | t7 << 8) & 0x1fff;\n            h9 += t7 >>> 5 | hibit;\n            c = 0;\n            d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = d0 >>> 13;\n            d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += d0 >>> 13;\n            d0 &= 0x1fff;\n            d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = d1 >>> 13;\n            d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += d1 >>> 13;\n            d1 &= 0x1fff;\n            d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = d2 >>> 13;\n            d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += d2 >>> 13;\n            d2 &= 0x1fff;\n            d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = d3 >>> 13;\n            d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += d3 >>> 13;\n            d3 &= 0x1fff;\n            d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = d4 >>> 13;\n            d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += d4 >>> 13;\n            d4 &= 0x1fff;\n            d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = d5 >>> 13;\n            d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += d5 >>> 13;\n            d5 &= 0x1fff;\n            d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = d6 >>> 13;\n            d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += d6 >>> 13;\n            d6 &= 0x1fff;\n            d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = d7 >>> 13;\n            d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += d7 >>> 13;\n            d7 &= 0x1fff;\n            d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = d8 >>> 13;\n            d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += d8 >>> 13;\n            d8 &= 0x1fff;\n            d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = d9 >>> 13;\n            d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += d9 >>> 13;\n            d9 &= 0x1fff;\n            c = (c << 2) + c | 0;\n            c = c + d0 | 0;\n            d0 = c & 0x1fff;\n            c = c >>> 13;\n            d1 += c;\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n            mpos += 16;\n            bytes -= 16;\n        }\n        this.h[0] = h0;\n        this.h[1] = h1;\n        this.h[2] = h2;\n        this.h[3] = h3;\n        this.h[4] = h4;\n        this.h[5] = h5;\n        this.h[6] = h6;\n        this.h[7] = h7;\n        this.h[8] = h8;\n        this.h[9] = h9;\n    };\n    poly1305.prototype.finish = function(mac, macpos) {\n        var g = new Uint16Array(10);\n        var c, mask, f, i;\n        if (this.leftover) {\n            i = this.leftover;\n            this.buffer[i++] = 1;\n            for(; i < 16; i++)this.buffer[i] = 0;\n            this.fin = 1;\n            this.blocks(this.buffer, 0, 16);\n        }\n        c = this.h[1] >>> 13;\n        this.h[1] &= 0x1fff;\n        for(i = 2; i < 10; i++){\n            this.h[i] += c;\n            c = this.h[i] >>> 13;\n            this.h[i] &= 0x1fff;\n        }\n        this.h[0] += c * 5;\n        c = this.h[0] >>> 13;\n        this.h[0] &= 0x1fff;\n        this.h[1] += c;\n        c = this.h[1] >>> 13;\n        this.h[1] &= 0x1fff;\n        this.h[2] += c;\n        g[0] = this.h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for(i = 1; i < 10; i++){\n            g[i] = this.h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        mask = (c ^ 1) - 1;\n        for(i = 0; i < 10; i++)g[i] &= mask;\n        mask = ~mask;\n        for(i = 0; i < 10; i++)this.h[i] = this.h[i] & mask | g[i];\n        this.h[0] = (this.h[0] | this.h[1] << 13) & 0xffff;\n        this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 0xffff;\n        this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 0xffff;\n        this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 0xffff;\n        this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 0xffff;\n        this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 0xffff;\n        this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 0xffff;\n        this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 0xffff;\n        f = this.h[0] + this.pad[0];\n        this.h[0] = f & 0xffff;\n        for(i = 1; i < 8; i++){\n            f = (this.h[i] + this.pad[i] | 0) + (f >>> 16) | 0;\n            this.h[i] = f & 0xffff;\n        }\n        mac[macpos + 0] = this.h[0] >>> 0 & 0xff;\n        mac[macpos + 1] = this.h[0] >>> 8 & 0xff;\n        mac[macpos + 2] = this.h[1] >>> 0 & 0xff;\n        mac[macpos + 3] = this.h[1] >>> 8 & 0xff;\n        mac[macpos + 4] = this.h[2] >>> 0 & 0xff;\n        mac[macpos + 5] = this.h[2] >>> 8 & 0xff;\n        mac[macpos + 6] = this.h[3] >>> 0 & 0xff;\n        mac[macpos + 7] = this.h[3] >>> 8 & 0xff;\n        mac[macpos + 8] = this.h[4] >>> 0 & 0xff;\n        mac[macpos + 9] = this.h[4] >>> 8 & 0xff;\n        mac[macpos + 10] = this.h[5] >>> 0 & 0xff;\n        mac[macpos + 11] = this.h[5] >>> 8 & 0xff;\n        mac[macpos + 12] = this.h[6] >>> 0 & 0xff;\n        mac[macpos + 13] = this.h[6] >>> 8 & 0xff;\n        mac[macpos + 14] = this.h[7] >>> 0 & 0xff;\n        mac[macpos + 15] = this.h[7] >>> 8 & 0xff;\n    };\n    poly1305.prototype.update = function(m, mpos, bytes) {\n        var i, want;\n        if (this.leftover) {\n            want = 16 - this.leftover;\n            if (want > bytes) want = bytes;\n            for(i = 0; i < want; i++)this.buffer[this.leftover + i] = m[mpos + i];\n            bytes -= want;\n            mpos += want;\n            this.leftover += want;\n            if (this.leftover < 16) return;\n            this.blocks(this.buffer, 0, 16);\n            this.leftover = 0;\n        }\n        if (bytes >= 16) {\n            want = bytes - bytes % 16;\n            this.blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n        if (bytes) {\n            for(i = 0; i < bytes; i++)this.buffer[this.leftover + i] = m[mpos + i];\n            this.leftover += bytes;\n        }\n    };\n    function crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n        var s = new poly1305(k);\n        s.update(m, mpos, n);\n        s.finish(out, outpos);\n        return 0;\n    }\n    function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n        var x = new Uint8Array(16);\n        crypto_onetimeauth(x, 0, m, mpos, n, k);\n        return crypto_verify_16(h, hpos, x, 0);\n    }\n    function crypto_secretbox(c, m, d, n, k) {\n        var i;\n        if (d < 32) return -1;\n        crypto_stream_xor(c, 0, m, 0, d, n, k);\n        crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n        for(i = 0; i < 16; i++)c[i] = 0;\n        return 0;\n    }\n    function crypto_secretbox_open(m, c, d, n, k) {\n        var i;\n        var x = new Uint8Array(32);\n        if (d < 32) return -1;\n        crypto_stream(x, 0, 32, n, k);\n        if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\n        crypto_stream_xor(m, 0, c, 0, d, n, k);\n        for(i = 0; i < 32; i++)m[i] = 0;\n        return 0;\n    }\n    function set25519(r, a) {\n        var i;\n        for(i = 0; i < 16; i++)r[i] = a[i] | 0;\n    }\n    function car25519(o) {\n        var i, v, c = 1;\n        for(i = 0; i < 16; i++){\n            v = o[i] + c + 65535;\n            c = Math.floor(v / 65536);\n            o[i] = v - c * 65536;\n        }\n        o[0] += c - 1 + 37 * (c - 1);\n    }\n    function sel25519(p, q, b) {\n        var t, c = ~(b - 1);\n        for(var i = 0; i < 16; i++){\n            t = c & (p[i] ^ q[i]);\n            p[i] ^= t;\n            q[i] ^= t;\n        }\n    }\n    function pack25519(o, n) {\n        var i, j, b;\n        var m = gf(), t = gf();\n        for(i = 0; i < 16; i++)t[i] = n[i];\n        car25519(t);\n        car25519(t);\n        car25519(t);\n        for(j = 0; j < 2; j++){\n            m[0] = t[0] - 0xffed;\n            for(i = 1; i < 15; i++){\n                m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n                m[i - 1] &= 0xffff;\n            }\n            m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n            b = m[15] >> 16 & 1;\n            m[14] &= 0xffff;\n            sel25519(t, m, 1 - b);\n        }\n        for(i = 0; i < 16; i++){\n            o[2 * i] = t[i] & 0xff;\n            o[2 * i + 1] = t[i] >> 8;\n        }\n    }\n    function neq25519(a, b) {\n        var c = new Uint8Array(32), d = new Uint8Array(32);\n        pack25519(c, a);\n        pack25519(d, b);\n        return crypto_verify_32(c, 0, d, 0);\n    }\n    function par25519(a) {\n        var d = new Uint8Array(32);\n        pack25519(d, a);\n        return d[0] & 1;\n    }\n    function unpack25519(o, n) {\n        var i;\n        for(i = 0; i < 16; i++)o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n        o[15] &= 0x7fff;\n    }\n    function A(o, a, b) {\n        for(var i = 0; i < 16; i++)o[i] = a[i] + b[i];\n    }\n    function Z(o, a, b) {\n        for(var i = 0; i < 16; i++)o[i] = a[i] - b[i];\n    }\n    function M(o, a, b) {\n        var v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n        v = a[0];\n        t0 += v * b0;\n        t1 += v * b1;\n        t2 += v * b2;\n        t3 += v * b3;\n        t4 += v * b4;\n        t5 += v * b5;\n        t6 += v * b6;\n        t7 += v * b7;\n        t8 += v * b8;\n        t9 += v * b9;\n        t10 += v * b10;\n        t11 += v * b11;\n        t12 += v * b12;\n        t13 += v * b13;\n        t14 += v * b14;\n        t15 += v * b15;\n        v = a[1];\n        t1 += v * b0;\n        t2 += v * b1;\n        t3 += v * b2;\n        t4 += v * b3;\n        t5 += v * b4;\n        t6 += v * b5;\n        t7 += v * b6;\n        t8 += v * b7;\n        t9 += v * b8;\n        t10 += v * b9;\n        t11 += v * b10;\n        t12 += v * b11;\n        t13 += v * b12;\n        t14 += v * b13;\n        t15 += v * b14;\n        t16 += v * b15;\n        v = a[2];\n        t2 += v * b0;\n        t3 += v * b1;\n        t4 += v * b2;\n        t5 += v * b3;\n        t6 += v * b4;\n        t7 += v * b5;\n        t8 += v * b6;\n        t9 += v * b7;\n        t10 += v * b8;\n        t11 += v * b9;\n        t12 += v * b10;\n        t13 += v * b11;\n        t14 += v * b12;\n        t15 += v * b13;\n        t16 += v * b14;\n        t17 += v * b15;\n        v = a[3];\n        t3 += v * b0;\n        t4 += v * b1;\n        t5 += v * b2;\n        t6 += v * b3;\n        t7 += v * b4;\n        t8 += v * b5;\n        t9 += v * b6;\n        t10 += v * b7;\n        t11 += v * b8;\n        t12 += v * b9;\n        t13 += v * b10;\n        t14 += v * b11;\n        t15 += v * b12;\n        t16 += v * b13;\n        t17 += v * b14;\n        t18 += v * b15;\n        v = a[4];\n        t4 += v * b0;\n        t5 += v * b1;\n        t6 += v * b2;\n        t7 += v * b3;\n        t8 += v * b4;\n        t9 += v * b5;\n        t10 += v * b6;\n        t11 += v * b7;\n        t12 += v * b8;\n        t13 += v * b9;\n        t14 += v * b10;\n        t15 += v * b11;\n        t16 += v * b12;\n        t17 += v * b13;\n        t18 += v * b14;\n        t19 += v * b15;\n        v = a[5];\n        t5 += v * b0;\n        t6 += v * b1;\n        t7 += v * b2;\n        t8 += v * b3;\n        t9 += v * b4;\n        t10 += v * b5;\n        t11 += v * b6;\n        t12 += v * b7;\n        t13 += v * b8;\n        t14 += v * b9;\n        t15 += v * b10;\n        t16 += v * b11;\n        t17 += v * b12;\n        t18 += v * b13;\n        t19 += v * b14;\n        t20 += v * b15;\n        v = a[6];\n        t6 += v * b0;\n        t7 += v * b1;\n        t8 += v * b2;\n        t9 += v * b3;\n        t10 += v * b4;\n        t11 += v * b5;\n        t12 += v * b6;\n        t13 += v * b7;\n        t14 += v * b8;\n        t15 += v * b9;\n        t16 += v * b10;\n        t17 += v * b11;\n        t18 += v * b12;\n        t19 += v * b13;\n        t20 += v * b14;\n        t21 += v * b15;\n        v = a[7];\n        t7 += v * b0;\n        t8 += v * b1;\n        t9 += v * b2;\n        t10 += v * b3;\n        t11 += v * b4;\n        t12 += v * b5;\n        t13 += v * b6;\n        t14 += v * b7;\n        t15 += v * b8;\n        t16 += v * b9;\n        t17 += v * b10;\n        t18 += v * b11;\n        t19 += v * b12;\n        t20 += v * b13;\n        t21 += v * b14;\n        t22 += v * b15;\n        v = a[8];\n        t8 += v * b0;\n        t9 += v * b1;\n        t10 += v * b2;\n        t11 += v * b3;\n        t12 += v * b4;\n        t13 += v * b5;\n        t14 += v * b6;\n        t15 += v * b7;\n        t16 += v * b8;\n        t17 += v * b9;\n        t18 += v * b10;\n        t19 += v * b11;\n        t20 += v * b12;\n        t21 += v * b13;\n        t22 += v * b14;\n        t23 += v * b15;\n        v = a[9];\n        t9 += v * b0;\n        t10 += v * b1;\n        t11 += v * b2;\n        t12 += v * b3;\n        t13 += v * b4;\n        t14 += v * b5;\n        t15 += v * b6;\n        t16 += v * b7;\n        t17 += v * b8;\n        t18 += v * b9;\n        t19 += v * b10;\n        t20 += v * b11;\n        t21 += v * b12;\n        t22 += v * b13;\n        t23 += v * b14;\n        t24 += v * b15;\n        v = a[10];\n        t10 += v * b0;\n        t11 += v * b1;\n        t12 += v * b2;\n        t13 += v * b3;\n        t14 += v * b4;\n        t15 += v * b5;\n        t16 += v * b6;\n        t17 += v * b7;\n        t18 += v * b8;\n        t19 += v * b9;\n        t20 += v * b10;\n        t21 += v * b11;\n        t22 += v * b12;\n        t23 += v * b13;\n        t24 += v * b14;\n        t25 += v * b15;\n        v = a[11];\n        t11 += v * b0;\n        t12 += v * b1;\n        t13 += v * b2;\n        t14 += v * b3;\n        t15 += v * b4;\n        t16 += v * b5;\n        t17 += v * b6;\n        t18 += v * b7;\n        t19 += v * b8;\n        t20 += v * b9;\n        t21 += v * b10;\n        t22 += v * b11;\n        t23 += v * b12;\n        t24 += v * b13;\n        t25 += v * b14;\n        t26 += v * b15;\n        v = a[12];\n        t12 += v * b0;\n        t13 += v * b1;\n        t14 += v * b2;\n        t15 += v * b3;\n        t16 += v * b4;\n        t17 += v * b5;\n        t18 += v * b6;\n        t19 += v * b7;\n        t20 += v * b8;\n        t21 += v * b9;\n        t22 += v * b10;\n        t23 += v * b11;\n        t24 += v * b12;\n        t25 += v * b13;\n        t26 += v * b14;\n        t27 += v * b15;\n        v = a[13];\n        t13 += v * b0;\n        t14 += v * b1;\n        t15 += v * b2;\n        t16 += v * b3;\n        t17 += v * b4;\n        t18 += v * b5;\n        t19 += v * b6;\n        t20 += v * b7;\n        t21 += v * b8;\n        t22 += v * b9;\n        t23 += v * b10;\n        t24 += v * b11;\n        t25 += v * b12;\n        t26 += v * b13;\n        t27 += v * b14;\n        t28 += v * b15;\n        v = a[14];\n        t14 += v * b0;\n        t15 += v * b1;\n        t16 += v * b2;\n        t17 += v * b3;\n        t18 += v * b4;\n        t19 += v * b5;\n        t20 += v * b6;\n        t21 += v * b7;\n        t22 += v * b8;\n        t23 += v * b9;\n        t24 += v * b10;\n        t25 += v * b11;\n        t26 += v * b12;\n        t27 += v * b13;\n        t28 += v * b14;\n        t29 += v * b15;\n        v = a[15];\n        t15 += v * b0;\n        t16 += v * b1;\n        t17 += v * b2;\n        t18 += v * b3;\n        t19 += v * b4;\n        t20 += v * b5;\n        t21 += v * b6;\n        t22 += v * b7;\n        t23 += v * b8;\n        t24 += v * b9;\n        t25 += v * b10;\n        t26 += v * b11;\n        t27 += v * b12;\n        t28 += v * b13;\n        t29 += v * b14;\n        t30 += v * b15;\n        t0 += 38 * t16;\n        t1 += 38 * t17;\n        t2 += 38 * t18;\n        t3 += 38 * t19;\n        t4 += 38 * t20;\n        t5 += 38 * t21;\n        t6 += 38 * t22;\n        t7 += 38 * t23;\n        t8 += 38 * t24;\n        t9 += 38 * t25;\n        t10 += 38 * t26;\n        t11 += 38 * t27;\n        t12 += 38 * t28;\n        t13 += 38 * t29;\n        t14 += 38 * t30;\n        // t15 left as is\n        // first car\n        c = 1;\n        v = t0 + c + 65535;\n        c = Math.floor(v / 65536);\n        t0 = v - c * 65536;\n        v = t1 + c + 65535;\n        c = Math.floor(v / 65536);\n        t1 = v - c * 65536;\n        v = t2 + c + 65535;\n        c = Math.floor(v / 65536);\n        t2 = v - c * 65536;\n        v = t3 + c + 65535;\n        c = Math.floor(v / 65536);\n        t3 = v - c * 65536;\n        v = t4 + c + 65535;\n        c = Math.floor(v / 65536);\n        t4 = v - c * 65536;\n        v = t5 + c + 65535;\n        c = Math.floor(v / 65536);\n        t5 = v - c * 65536;\n        v = t6 + c + 65535;\n        c = Math.floor(v / 65536);\n        t6 = v - c * 65536;\n        v = t7 + c + 65535;\n        c = Math.floor(v / 65536);\n        t7 = v - c * 65536;\n        v = t8 + c + 65535;\n        c = Math.floor(v / 65536);\n        t8 = v - c * 65536;\n        v = t9 + c + 65535;\n        c = Math.floor(v / 65536);\n        t9 = v - c * 65536;\n        v = t10 + c + 65535;\n        c = Math.floor(v / 65536);\n        t10 = v - c * 65536;\n        v = t11 + c + 65535;\n        c = Math.floor(v / 65536);\n        t11 = v - c * 65536;\n        v = t12 + c + 65535;\n        c = Math.floor(v / 65536);\n        t12 = v - c * 65536;\n        v = t13 + c + 65535;\n        c = Math.floor(v / 65536);\n        t13 = v - c * 65536;\n        v = t14 + c + 65535;\n        c = Math.floor(v / 65536);\n        t14 = v - c * 65536;\n        v = t15 + c + 65535;\n        c = Math.floor(v / 65536);\n        t15 = v - c * 65536;\n        t0 += c - 1 + 37 * (c - 1);\n        // second car\n        c = 1;\n        v = t0 + c + 65535;\n        c = Math.floor(v / 65536);\n        t0 = v - c * 65536;\n        v = t1 + c + 65535;\n        c = Math.floor(v / 65536);\n        t1 = v - c * 65536;\n        v = t2 + c + 65535;\n        c = Math.floor(v / 65536);\n        t2 = v - c * 65536;\n        v = t3 + c + 65535;\n        c = Math.floor(v / 65536);\n        t3 = v - c * 65536;\n        v = t4 + c + 65535;\n        c = Math.floor(v / 65536);\n        t4 = v - c * 65536;\n        v = t5 + c + 65535;\n        c = Math.floor(v / 65536);\n        t5 = v - c * 65536;\n        v = t6 + c + 65535;\n        c = Math.floor(v / 65536);\n        t6 = v - c * 65536;\n        v = t7 + c + 65535;\n        c = Math.floor(v / 65536);\n        t7 = v - c * 65536;\n        v = t8 + c + 65535;\n        c = Math.floor(v / 65536);\n        t8 = v - c * 65536;\n        v = t9 + c + 65535;\n        c = Math.floor(v / 65536);\n        t9 = v - c * 65536;\n        v = t10 + c + 65535;\n        c = Math.floor(v / 65536);\n        t10 = v - c * 65536;\n        v = t11 + c + 65535;\n        c = Math.floor(v / 65536);\n        t11 = v - c * 65536;\n        v = t12 + c + 65535;\n        c = Math.floor(v / 65536);\n        t12 = v - c * 65536;\n        v = t13 + c + 65535;\n        c = Math.floor(v / 65536);\n        t13 = v - c * 65536;\n        v = t14 + c + 65535;\n        c = Math.floor(v / 65536);\n        t14 = v - c * 65536;\n        v = t15 + c + 65535;\n        c = Math.floor(v / 65536);\n        t15 = v - c * 65536;\n        t0 += c - 1 + 37 * (c - 1);\n        o[0] = t0;\n        o[1] = t1;\n        o[2] = t2;\n        o[3] = t3;\n        o[4] = t4;\n        o[5] = t5;\n        o[6] = t6;\n        o[7] = t7;\n        o[8] = t8;\n        o[9] = t9;\n        o[10] = t10;\n        o[11] = t11;\n        o[12] = t12;\n        o[13] = t13;\n        o[14] = t14;\n        o[15] = t15;\n    }\n    function S(o, a) {\n        M(o, a, a);\n    }\n    function inv25519(o, i) {\n        var c = gf();\n        var a;\n        for(a = 0; a < 16; a++)c[a] = i[a];\n        for(a = 253; a >= 0; a--){\n            S(c, c);\n            if (a !== 2 && a !== 4) M(c, c, i);\n        }\n        for(a = 0; a < 16; a++)o[a] = c[a];\n    }\n    function pow2523(o, i) {\n        var c = gf();\n        var a;\n        for(a = 0; a < 16; a++)c[a] = i[a];\n        for(a = 250; a >= 0; a--){\n            S(c, c);\n            if (a !== 1) M(c, c, i);\n        }\n        for(a = 0; a < 16; a++)o[a] = c[a];\n    }\n    function crypto_scalarmult(q, n, p) {\n        var z = new Uint8Array(32);\n        var x = new Float64Array(80), r, i;\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n        for(i = 0; i < 31; i++)z[i] = n[i];\n        z[31] = n[31] & 127 | 64;\n        z[0] &= 248;\n        unpack25519(x, p);\n        for(i = 0; i < 16; i++){\n            b[i] = x[i];\n            d[i] = a[i] = c[i] = 0;\n        }\n        a[0] = d[0] = 1;\n        for(i = 254; i >= 0; --i){\n            r = z[i >>> 3] >>> (i & 7) & 1;\n            sel25519(a, b, r);\n            sel25519(c, d, r);\n            A(e, a, c);\n            Z(a, a, c);\n            A(c, b, d);\n            Z(b, b, d);\n            S(d, e);\n            S(f, a);\n            M(a, c, a);\n            M(c, b, e);\n            A(e, a, c);\n            Z(a, a, c);\n            S(b, a);\n            Z(c, d, f);\n            M(a, c, _121665);\n            A(a, a, d);\n            M(c, c, a);\n            M(a, d, f);\n            M(d, b, x);\n            S(b, e);\n            sel25519(a, b, r);\n            sel25519(c, d, r);\n        }\n        for(i = 0; i < 16; i++){\n            x[i + 16] = a[i];\n            x[i + 32] = c[i];\n            x[i + 48] = b[i];\n            x[i + 64] = d[i];\n        }\n        var x32 = x.subarray(32);\n        var x16 = x.subarray(16);\n        inv25519(x32, x32);\n        M(x16, x16, x32);\n        pack25519(q, x16);\n        return 0;\n    }\n    function crypto_scalarmult_base(q, n) {\n        return crypto_scalarmult(q, n, _9);\n    }\n    function crypto_box_keypair(y, x) {\n        randombytes(x, 32);\n        return crypto_scalarmult_base(y, x);\n    }\n    function crypto_box_beforenm(k, y, x) {\n        var s = new Uint8Array(32);\n        crypto_scalarmult(s, x, y);\n        return crypto_core_hsalsa20(k, _0, s, sigma);\n    }\n    var crypto_box_afternm = crypto_secretbox;\n    var crypto_box_open_afternm = crypto_secretbox_open;\n    function crypto_box(c, m, d, n, y, x) {\n        var k = new Uint8Array(32);\n        crypto_box_beforenm(k, y, x);\n        return crypto_box_afternm(c, m, d, n, k);\n    }\n    function crypto_box_open(m, c, d, n, y, x) {\n        var k = new Uint8Array(32);\n        crypto_box_beforenm(k, y, x);\n        return crypto_box_open_afternm(m, c, d, n, k);\n    }\n    var K = [\n        0x428a2f98,\n        0xd728ae22,\n        0x71374491,\n        0x23ef65cd,\n        0xb5c0fbcf,\n        0xec4d3b2f,\n        0xe9b5dba5,\n        0x8189dbbc,\n        0x3956c25b,\n        0xf348b538,\n        0x59f111f1,\n        0xb605d019,\n        0x923f82a4,\n        0xaf194f9b,\n        0xab1c5ed5,\n        0xda6d8118,\n        0xd807aa98,\n        0xa3030242,\n        0x12835b01,\n        0x45706fbe,\n        0x243185be,\n        0x4ee4b28c,\n        0x550c7dc3,\n        0xd5ffb4e2,\n        0x72be5d74,\n        0xf27b896f,\n        0x80deb1fe,\n        0x3b1696b1,\n        0x9bdc06a7,\n        0x25c71235,\n        0xc19bf174,\n        0xcf692694,\n        0xe49b69c1,\n        0x9ef14ad2,\n        0xefbe4786,\n        0x384f25e3,\n        0x0fc19dc6,\n        0x8b8cd5b5,\n        0x240ca1cc,\n        0x77ac9c65,\n        0x2de92c6f,\n        0x592b0275,\n        0x4a7484aa,\n        0x6ea6e483,\n        0x5cb0a9dc,\n        0xbd41fbd4,\n        0x76f988da,\n        0x831153b5,\n        0x983e5152,\n        0xee66dfab,\n        0xa831c66d,\n        0x2db43210,\n        0xb00327c8,\n        0x98fb213f,\n        0xbf597fc7,\n        0xbeef0ee4,\n        0xc6e00bf3,\n        0x3da88fc2,\n        0xd5a79147,\n        0x930aa725,\n        0x06ca6351,\n        0xe003826f,\n        0x14292967,\n        0x0a0e6e70,\n        0x27b70a85,\n        0x46d22ffc,\n        0x2e1b2138,\n        0x5c26c926,\n        0x4d2c6dfc,\n        0x5ac42aed,\n        0x53380d13,\n        0x9d95b3df,\n        0x650a7354,\n        0x8baf63de,\n        0x766a0abb,\n        0x3c77b2a8,\n        0x81c2c92e,\n        0x47edaee6,\n        0x92722c85,\n        0x1482353b,\n        0xa2bfe8a1,\n        0x4cf10364,\n        0xa81a664b,\n        0xbc423001,\n        0xc24b8b70,\n        0xd0f89791,\n        0xc76c51a3,\n        0x0654be30,\n        0xd192e819,\n        0xd6ef5218,\n        0xd6990624,\n        0x5565a910,\n        0xf40e3585,\n        0x5771202a,\n        0x106aa070,\n        0x32bbd1b8,\n        0x19a4c116,\n        0xb8d2d0c8,\n        0x1e376c08,\n        0x5141ab53,\n        0x2748774c,\n        0xdf8eeb99,\n        0x34b0bcb5,\n        0xe19b48a8,\n        0x391c0cb3,\n        0xc5c95a63,\n        0x4ed8aa4a,\n        0xe3418acb,\n        0x5b9cca4f,\n        0x7763e373,\n        0x682e6ff3,\n        0xd6b2b8a3,\n        0x748f82ee,\n        0x5defb2fc,\n        0x78a5636f,\n        0x43172f60,\n        0x84c87814,\n        0xa1f0ab72,\n        0x8cc70208,\n        0x1a6439ec,\n        0x90befffa,\n        0x23631e28,\n        0xa4506ceb,\n        0xde82bde9,\n        0xbef9a3f7,\n        0xb2c67915,\n        0xc67178f2,\n        0xe372532b,\n        0xca273ece,\n        0xea26619c,\n        0xd186b8c7,\n        0x21c0c207,\n        0xeada7dd6,\n        0xcde0eb1e,\n        0xf57d4f7f,\n        0xee6ed178,\n        0x06f067aa,\n        0x72176fba,\n        0x0a637dc5,\n        0xa2c898a6,\n        0x113f9804,\n        0xbef90dae,\n        0x1b710b35,\n        0x131c471b,\n        0x28db77f5,\n        0x23047d84,\n        0x32caab7b,\n        0x40c72493,\n        0x3c9ebe0a,\n        0x15c9bebc,\n        0x431d67c4,\n        0x9c100d4c,\n        0x4cc5d4be,\n        0xcb3e42b6,\n        0x597f299c,\n        0xfc657e2a,\n        0x5fcb6fab,\n        0x3ad6faec,\n        0x6c44198c,\n        0x4a475817\n    ];\n    function crypto_hashblocks_hl(hh, hl, m, n) {\n        var wh = new Int32Array(16), wl = new Int32Array(16), bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7, bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7, th, tl, i, j, h, l, a, b, c, d;\n        var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];\n        var pos = 0;\n        while(n >= 128){\n            for(i = 0; i < 16; i++){\n                j = 8 * i + pos;\n                wh[i] = m[j + 0] << 24 | m[j + 1] << 16 | m[j + 2] << 8 | m[j + 3];\n                wl[i] = m[j + 4] << 24 | m[j + 5] << 16 | m[j + 6] << 8 | m[j + 7];\n            }\n            for(i = 0; i < 80; i++){\n                bh0 = ah0;\n                bh1 = ah1;\n                bh2 = ah2;\n                bh3 = ah3;\n                bh4 = ah4;\n                bh5 = ah5;\n                bh6 = ah6;\n                bh7 = ah7;\n                bl0 = al0;\n                bl1 = al1;\n                bl2 = al2;\n                bl3 = al3;\n                bl4 = al4;\n                bl5 = al5;\n                bl6 = al6;\n                bl7 = al7;\n                // add\n                h = ah7;\n                l = al7;\n                a = l & 0xffff;\n                b = l >>> 16;\n                c = h & 0xffff;\n                d = h >>> 16;\n                // Sigma1\n                h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));\n                l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // Ch\n                h = ah4 & ah5 ^ ~ah4 & ah6;\n                l = al4 & al5 ^ ~al4 & al6;\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // K\n                h = K[i * 2];\n                l = K[i * 2 + 1];\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // w\n                h = wh[i % 16];\n                l = wl[i % 16];\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                b += a >>> 16;\n                c += b >>> 16;\n                d += c >>> 16;\n                th = c & 0xffff | d << 16;\n                tl = a & 0xffff | b << 16;\n                // add\n                h = th;\n                l = tl;\n                a = l & 0xffff;\n                b = l >>> 16;\n                c = h & 0xffff;\n                d = h >>> 16;\n                // Sigma0\n                h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));\n                l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                // Maj\n                h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;\n                l = al0 & al1 ^ al0 & al2 ^ al1 & al2;\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                b += a >>> 16;\n                c += b >>> 16;\n                d += c >>> 16;\n                bh7 = c & 0xffff | d << 16;\n                bl7 = a & 0xffff | b << 16;\n                // add\n                h = bh3;\n                l = bl3;\n                a = l & 0xffff;\n                b = l >>> 16;\n                c = h & 0xffff;\n                d = h >>> 16;\n                h = th;\n                l = tl;\n                a += l & 0xffff;\n                b += l >>> 16;\n                c += h & 0xffff;\n                d += h >>> 16;\n                b += a >>> 16;\n                c += b >>> 16;\n                d += c >>> 16;\n                bh3 = c & 0xffff | d << 16;\n                bl3 = a & 0xffff | b << 16;\n                ah1 = bh0;\n                ah2 = bh1;\n                ah3 = bh2;\n                ah4 = bh3;\n                ah5 = bh4;\n                ah6 = bh5;\n                ah7 = bh6;\n                ah0 = bh7;\n                al1 = bl0;\n                al2 = bl1;\n                al3 = bl2;\n                al4 = bl3;\n                al5 = bl4;\n                al6 = bl5;\n                al7 = bl6;\n                al0 = bl7;\n                if (i % 16 === 15) {\n                    for(j = 0; j < 16; j++){\n                        // add\n                        h = wh[j];\n                        l = wl[j];\n                        a = l & 0xffff;\n                        b = l >>> 16;\n                        c = h & 0xffff;\n                        d = h >>> 16;\n                        h = wh[(j + 9) % 16];\n                        l = wl[(j + 9) % 16];\n                        a += l & 0xffff;\n                        b += l >>> 16;\n                        c += h & 0xffff;\n                        d += h >>> 16;\n                        // sigma0\n                        th = wh[(j + 1) % 16];\n                        tl = wl[(j + 1) % 16];\n                        h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;\n                        l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);\n                        a += l & 0xffff;\n                        b += l >>> 16;\n                        c += h & 0xffff;\n                        d += h >>> 16;\n                        // sigma1\n                        th = wh[(j + 14) % 16];\n                        tl = wl[(j + 14) % 16];\n                        h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;\n                        l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);\n                        a += l & 0xffff;\n                        b += l >>> 16;\n                        c += h & 0xffff;\n                        d += h >>> 16;\n                        b += a >>> 16;\n                        c += b >>> 16;\n                        d += c >>> 16;\n                        wh[j] = c & 0xffff | d << 16;\n                        wl[j] = a & 0xffff | b << 16;\n                    }\n                }\n            }\n            // add\n            h = ah0;\n            l = al0;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[0];\n            l = hl[0];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[0] = ah0 = c & 0xffff | d << 16;\n            hl[0] = al0 = a & 0xffff | b << 16;\n            h = ah1;\n            l = al1;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[1];\n            l = hl[1];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[1] = ah1 = c & 0xffff | d << 16;\n            hl[1] = al1 = a & 0xffff | b << 16;\n            h = ah2;\n            l = al2;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[2];\n            l = hl[2];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[2] = ah2 = c & 0xffff | d << 16;\n            hl[2] = al2 = a & 0xffff | b << 16;\n            h = ah3;\n            l = al3;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[3];\n            l = hl[3];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[3] = ah3 = c & 0xffff | d << 16;\n            hl[3] = al3 = a & 0xffff | b << 16;\n            h = ah4;\n            l = al4;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[4];\n            l = hl[4];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[4] = ah4 = c & 0xffff | d << 16;\n            hl[4] = al4 = a & 0xffff | b << 16;\n            h = ah5;\n            l = al5;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[5];\n            l = hl[5];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[5] = ah5 = c & 0xffff | d << 16;\n            hl[5] = al5 = a & 0xffff | b << 16;\n            h = ah6;\n            l = al6;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[6];\n            l = hl[6];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[6] = ah6 = c & 0xffff | d << 16;\n            hl[6] = al6 = a & 0xffff | b << 16;\n            h = ah7;\n            l = al7;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = hh[7];\n            l = hl[7];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            hh[7] = ah7 = c & 0xffff | d << 16;\n            hl[7] = al7 = a & 0xffff | b << 16;\n            pos += 128;\n            n -= 128;\n        }\n        return n;\n    }\n    function crypto_hash(out, m, n) {\n        var hh = new Int32Array(8), hl = new Int32Array(8), x = new Uint8Array(256), i, b = n;\n        hh[0] = 0x6a09e667;\n        hh[1] = 0xbb67ae85;\n        hh[2] = 0x3c6ef372;\n        hh[3] = 0xa54ff53a;\n        hh[4] = 0x510e527f;\n        hh[5] = 0x9b05688c;\n        hh[6] = 0x1f83d9ab;\n        hh[7] = 0x5be0cd19;\n        hl[0] = 0xf3bcc908;\n        hl[1] = 0x84caa73b;\n        hl[2] = 0xfe94f82b;\n        hl[3] = 0x5f1d36f1;\n        hl[4] = 0xade682d1;\n        hl[5] = 0x2b3e6c1f;\n        hl[6] = 0xfb41bd6b;\n        hl[7] = 0x137e2179;\n        crypto_hashblocks_hl(hh, hl, m, n);\n        n %= 128;\n        for(i = 0; i < n; i++)x[i] = m[b - n + i];\n        x[n] = 128;\n        n = 256 - 128 * (n < 112 ? 1 : 0);\n        x[n - 9] = 0;\n        ts64(x, n - 8, b / 0x20000000 | 0, b << 3);\n        crypto_hashblocks_hl(hh, hl, x, n);\n        for(i = 0; i < 8; i++)ts64(out, 8 * i, hh[i], hl[i]);\n        return 0;\n    }\n    function add(p, q) {\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\n        Z(a, p[1], p[0]);\n        Z(t, q[1], q[0]);\n        M(a, a, t);\n        A(b, p[0], p[1]);\n        A(t, q[0], q[1]);\n        M(b, b, t);\n        M(c, p[3], q[3]);\n        M(c, c, D2);\n        M(d, p[2], q[2]);\n        A(d, d, d);\n        Z(e, b, a);\n        Z(f, d, c);\n        A(g, d, c);\n        A(h, b, a);\n        M(p[0], e, f);\n        M(p[1], h, g);\n        M(p[2], g, f);\n        M(p[3], e, h);\n    }\n    function cswap(p, q, b) {\n        var i;\n        for(i = 0; i < 4; i++){\n            sel25519(p[i], q[i], b);\n        }\n    }\n    function pack(r, p) {\n        var tx = gf(), ty = gf(), zi = gf();\n        inv25519(zi, p[2]);\n        M(tx, p[0], zi);\n        M(ty, p[1], zi);\n        pack25519(r, ty);\n        r[31] ^= par25519(tx) << 7;\n    }\n    function scalarmult(p, q, s) {\n        var b, i;\n        set25519(p[0], gf0);\n        set25519(p[1], gf1);\n        set25519(p[2], gf1);\n        set25519(p[3], gf0);\n        for(i = 255; i >= 0; --i){\n            b = s[i / 8 | 0] >> (i & 7) & 1;\n            cswap(p, q, b);\n            add(q, p);\n            add(p, p);\n            cswap(p, q, b);\n        }\n    }\n    function scalarbase(p, s) {\n        var q = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        set25519(q[0], X);\n        set25519(q[1], Y);\n        set25519(q[2], gf1);\n        M(q[3], X, Y);\n        scalarmult(p, q, s);\n    }\n    function crypto_sign_keypair(pk, sk, seeded) {\n        var d = new Uint8Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        var i;\n        if (!seeded) randombytes(sk, 32);\n        crypto_hash(d, sk, 32);\n        d[0] &= 248;\n        d[31] &= 127;\n        d[31] |= 64;\n        scalarbase(p, d);\n        pack(pk, p);\n        for(i = 0; i < 32; i++)sk[i + 32] = pk[i];\n        return 0;\n    }\n    var L = new Float64Array([\n        0xed,\n        0xd3,\n        0xf5,\n        0x5c,\n        0x1a,\n        0x63,\n        0x12,\n        0x58,\n        0xd6,\n        0x9c,\n        0xf7,\n        0xa2,\n        0xde,\n        0xf9,\n        0xde,\n        0x14,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0x10\n    ]);\n    function modL(r, x) {\n        var carry, i, j, k;\n        for(i = 63; i >= 32; --i){\n            carry = 0;\n            for(j = i - 32, k = i - 12; j < k; ++j){\n                x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n                carry = Math.floor((x[j] + 128) / 256);\n                x[j] -= carry * 256;\n            }\n            x[j] += carry;\n            x[i] = 0;\n        }\n        carry = 0;\n        for(j = 0; j < 32; j++){\n            x[j] += carry - (x[31] >> 4) * L[j];\n            carry = x[j] >> 8;\n            x[j] &= 255;\n        }\n        for(j = 0; j < 32; j++)x[j] -= carry * L[j];\n        for(i = 0; i < 32; i++){\n            x[i + 1] += x[i] >> 8;\n            r[i] = x[i] & 255;\n        }\n    }\n    function reduce(r) {\n        var x = new Float64Array(64), i;\n        for(i = 0; i < 64; i++)x[i] = r[i];\n        for(i = 0; i < 64; i++)r[i] = 0;\n        modL(r, x);\n    }\n    // Note: difference from C - smlen returned, not passed as argument.\n    function crypto_sign(sm, m, n, sk) {\n        var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n        var i, j, x = new Float64Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        crypto_hash(d, sk, 32);\n        d[0] &= 248;\n        d[31] &= 127;\n        d[31] |= 64;\n        var smlen = n + 64;\n        for(i = 0; i < n; i++)sm[64 + i] = m[i];\n        for(i = 0; i < 32; i++)sm[32 + i] = d[32 + i];\n        crypto_hash(r, sm.subarray(32), n + 32);\n        reduce(r);\n        scalarbase(p, r);\n        pack(sm, p);\n        for(i = 32; i < 64; i++)sm[i] = sk[i];\n        crypto_hash(h, sm, n + 64);\n        reduce(h);\n        for(i = 0; i < 64; i++)x[i] = 0;\n        for(i = 0; i < 32; i++)x[i] = r[i];\n        for(i = 0; i < 32; i++){\n            for(j = 0; j < 32; j++){\n                x[i + j] += h[i] * d[j];\n            }\n        }\n        modL(sm.subarray(32), x);\n        return smlen;\n    }\n    function unpackneg(r, p) {\n        var t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\n        set25519(r[2], gf1);\n        unpack25519(r[1], p);\n        S(num, r[1]);\n        M(den, num, D);\n        Z(num, num, r[2]);\n        A(den, r[2], den);\n        S(den2, den);\n        S(den4, den2);\n        M(den6, den4, den2);\n        M(t, den6, num);\n        M(t, t, den);\n        pow2523(t, t);\n        M(t, t, num);\n        M(t, t, den);\n        M(t, t, den);\n        M(r[0], t, den);\n        S(chk, r[0]);\n        M(chk, chk, den);\n        if (neq25519(chk, num)) M(r[0], r[0], I);\n        S(chk, r[0]);\n        M(chk, chk, den);\n        if (neq25519(chk, num)) return -1;\n        if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n        M(r[3], r[0], r[1]);\n        return 0;\n    }\n    function crypto_sign_open(m, sm, n, pk) {\n        var i;\n        var t = new Uint8Array(32), h = new Uint8Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ], q = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        if (n < 64) return -1;\n        if (unpackneg(q, pk)) return -1;\n        for(i = 0; i < n; i++)m[i] = sm[i];\n        for(i = 0; i < 32; i++)m[i + 32] = pk[i];\n        crypto_hash(h, m, n);\n        reduce(h);\n        scalarmult(p, q, h);\n        scalarbase(q, sm.subarray(32));\n        add(p, q);\n        pack(t, p);\n        n -= 64;\n        if (crypto_verify_32(sm, 0, t, 0)) {\n            for(i = 0; i < n; i++)m[i] = 0;\n            return -1;\n        }\n        for(i = 0; i < n; i++)m[i] = sm[i + 64];\n        return n;\n    }\n    var crypto_secretbox_KEYBYTES = 32, crypto_secretbox_NONCEBYTES = 24, crypto_secretbox_ZEROBYTES = 32, crypto_secretbox_BOXZEROBYTES = 16, crypto_scalarmult_BYTES = 32, crypto_scalarmult_SCALARBYTES = 32, crypto_box_PUBLICKEYBYTES = 32, crypto_box_SECRETKEYBYTES = 32, crypto_box_BEFORENMBYTES = 32, crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES, crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES, crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES, crypto_sign_BYTES = 64, crypto_sign_PUBLICKEYBYTES = 32, crypto_sign_SECRETKEYBYTES = 64, crypto_sign_SEEDBYTES = 32, crypto_hash_BYTES = 64;\n    nacl.lowlevel = {\n        crypto_core_hsalsa20: crypto_core_hsalsa20,\n        crypto_stream_xor: crypto_stream_xor,\n        crypto_stream: crypto_stream,\n        crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n        crypto_stream_salsa20: crypto_stream_salsa20,\n        crypto_onetimeauth: crypto_onetimeauth,\n        crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n        crypto_verify_16: crypto_verify_16,\n        crypto_verify_32: crypto_verify_32,\n        crypto_secretbox: crypto_secretbox,\n        crypto_secretbox_open: crypto_secretbox_open,\n        crypto_scalarmult: crypto_scalarmult,\n        crypto_scalarmult_base: crypto_scalarmult_base,\n        crypto_box_beforenm: crypto_box_beforenm,\n        crypto_box_afternm: crypto_box_afternm,\n        crypto_box: crypto_box,\n        crypto_box_open: crypto_box_open,\n        crypto_box_keypair: crypto_box_keypair,\n        crypto_hash: crypto_hash,\n        crypto_sign: crypto_sign,\n        crypto_sign_keypair: crypto_sign_keypair,\n        crypto_sign_open: crypto_sign_open,\n        crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n        crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n        crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n        crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n        crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n        crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n        crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n        crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n        crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n        crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n        crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n        crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n        crypto_sign_BYTES: crypto_sign_BYTES,\n        crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n        crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n        crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n        crypto_hash_BYTES: crypto_hash_BYTES,\n        gf: gf,\n        D: D,\n        L: L,\n        pack25519: pack25519,\n        unpack25519: unpack25519,\n        M: M,\n        A: A,\n        S: S,\n        Z: Z,\n        pow2523: pow2523,\n        add: add,\n        set25519: set25519,\n        modL: modL,\n        scalarmult: scalarmult,\n        scalarbase: scalarbase\n    };\n    /* High-level API */ function checkLengths(k, n) {\n        if (k.length !== crypto_secretbox_KEYBYTES) throw new Error(\"bad key size\");\n        if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error(\"bad nonce size\");\n    }\n    function checkBoxLengths(pk, sk) {\n        if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error(\"bad public key size\");\n        if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n    }\n    function checkArrayTypes() {\n        for(var i = 0; i < arguments.length; i++){\n            if (!(arguments[i] instanceof Uint8Array)) throw new TypeError(\"unexpected type, use Uint8Array\");\n        }\n    }\n    function cleanup(arr) {\n        for(var i = 0; i < arr.length; i++)arr[i] = 0;\n    }\n    nacl.randomBytes = function(n) {\n        var b = new Uint8Array(n);\n        randombytes(b, n);\n        return b;\n    };\n    nacl.secretbox = function(msg, nonce, key) {\n        checkArrayTypes(msg, nonce, key);\n        checkLengths(key, nonce);\n        var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n        var c = new Uint8Array(m.length);\n        for(var i = 0; i < msg.length; i++)m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n        crypto_secretbox(c, m, m.length, nonce, key);\n        return c.subarray(crypto_secretbox_BOXZEROBYTES);\n    };\n    nacl.secretbox.open = function(box, nonce, key) {\n        checkArrayTypes(box, nonce, key);\n        checkLengths(key, nonce);\n        var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n        var m = new Uint8Array(c.length);\n        for(var i = 0; i < box.length; i++)c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n        if (c.length < 32) return null;\n        if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n        return m.subarray(crypto_secretbox_ZEROBYTES);\n    };\n    nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\n    nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\n    nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n    nacl.scalarMult = function(n, p) {\n        checkArrayTypes(n, p);\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error(\"bad n size\");\n        if (p.length !== crypto_scalarmult_BYTES) throw new Error(\"bad p size\");\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\n        crypto_scalarmult(q, n, p);\n        return q;\n    };\n    nacl.scalarMult.base = function(n) {\n        checkArrayTypes(n);\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error(\"bad n size\");\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\n        crypto_scalarmult_base(q, n);\n        return q;\n    };\n    nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\n    nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n    nacl.box = function(msg, nonce, publicKey, secretKey) {\n        var k = nacl.box.before(publicKey, secretKey);\n        return nacl.secretbox(msg, nonce, k);\n    };\n    nacl.box.before = function(publicKey, secretKey) {\n        checkArrayTypes(publicKey, secretKey);\n        checkBoxLengths(publicKey, secretKey);\n        var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n        crypto_box_beforenm(k, publicKey, secretKey);\n        return k;\n    };\n    nacl.box.after = nacl.secretbox;\n    nacl.box.open = function(msg, nonce, publicKey, secretKey) {\n        var k = nacl.box.before(publicKey, secretKey);\n        return nacl.secretbox.open(msg, nonce, k);\n    };\n    nacl.box.open.after = nacl.secretbox.open;\n    nacl.box.keyPair = function() {\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n        crypto_box_keypair(pk, sk);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.box.keyPair.fromSecretKey = function(secretKey) {\n        checkArrayTypes(secretKey);\n        if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n        crypto_scalarmult_base(pk, secretKey);\n        return {\n            publicKey: pk,\n            secretKey: new Uint8Array(secretKey)\n        };\n    };\n    nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\n    nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\n    nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\n    nacl.box.nonceLength = crypto_box_NONCEBYTES;\n    nacl.box.overheadLength = nacl.secretbox.overheadLength;\n    nacl.sign = function(msg, secretKey) {\n        checkArrayTypes(msg, secretKey);\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n        var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);\n        crypto_sign(signedMsg, msg, msg.length, secretKey);\n        return signedMsg;\n    };\n    nacl.sign.open = function(signedMsg, publicKey) {\n        checkArrayTypes(signedMsg, publicKey);\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error(\"bad public key size\");\n        var tmp = new Uint8Array(signedMsg.length);\n        var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n        if (mlen < 0) return null;\n        var m = new Uint8Array(mlen);\n        for(var i = 0; i < m.length; i++)m[i] = tmp[i];\n        return m;\n    };\n    nacl.sign.detached = function(msg, secretKey) {\n        var signedMsg = nacl.sign(msg, secretKey);\n        var sig = new Uint8Array(crypto_sign_BYTES);\n        for(var i = 0; i < sig.length; i++)sig[i] = signedMsg[i];\n        return sig;\n    };\n    nacl.sign.detached.verify = function(msg, sig, publicKey) {\n        checkArrayTypes(msg, sig, publicKey);\n        if (sig.length !== crypto_sign_BYTES) throw new Error(\"bad signature size\");\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error(\"bad public key size\");\n        var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n        var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n        var i;\n        for(i = 0; i < crypto_sign_BYTES; i++)sm[i] = sig[i];\n        for(i = 0; i < msg.length; i++)sm[i + crypto_sign_BYTES] = msg[i];\n        return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;\n    };\n    nacl.sign.keyPair = function() {\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n        crypto_sign_keypair(pk, sk);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.sign.keyPair.fromSecretKey = function(secretKey) {\n        checkArrayTypes(secretKey);\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error(\"bad secret key size\");\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        for(var i = 0; i < pk.length; i++)pk[i] = secretKey[32 + i];\n        return {\n            publicKey: pk,\n            secretKey: new Uint8Array(secretKey)\n        };\n    };\n    nacl.sign.keyPair.fromSeed = function(seed) {\n        checkArrayTypes(seed);\n        if (seed.length !== crypto_sign_SEEDBYTES) throw new Error(\"bad seed size\");\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n        for(var i = 0; i < 32; i++)sk[i] = seed[i];\n        crypto_sign_keypair(pk, sk, true);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\n    nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\n    nacl.sign.seedLength = crypto_sign_SEEDBYTES;\n    nacl.sign.signatureLength = crypto_sign_BYTES;\n    nacl.hash = function(msg) {\n        checkArrayTypes(msg);\n        var h = new Uint8Array(crypto_hash_BYTES);\n        crypto_hash(h, msg, msg.length);\n        return h;\n    };\n    nacl.hash.hashLength = crypto_hash_BYTES;\n    nacl.verify = function(x, y) {\n        checkArrayTypes(x, y);\n        // Zero length arguments are considered not equal.\n        if (x.length === 0 || y.length === 0) return false;\n        if (x.length !== y.length) return false;\n        return vn(x, 0, y, 0, x.length) === 0 ? true : false;\n    };\n    nacl.setPRNG = function(fn) {\n        randombytes = fn;\n    };\n    (function() {\n        // Initialize PRNG if environment provides CSPRNG.\n        // If not, methods calling randombytes will throw.\n        var crypto = typeof self !== \"undefined\" ? self.crypto || self.msCrypto : null;\n        if (crypto && crypto.getRandomValues) {\n            // Browsers.\n            var QUOTA = 65536;\n            nacl.setPRNG(function(x, n) {\n                var i, v = new Uint8Array(n);\n                for(i = 0; i < n; i += QUOTA){\n                    crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n                }\n                for(i = 0; i < n; i++)x[i] = v[i];\n                cleanup(v);\n            });\n        } else if (true) {\n            // Node.js.\n            crypto = __webpack_require__(/*! crypto */ \"crypto\");\n            if (crypto && crypto.randomBytes) {\n                nacl.setPRNG(function(x, n) {\n                    var i, v = crypto.randomBytes(n);\n                    for(i = 0; i < n; i++)x[i] = v[i];\n                    cleanup(v);\n                });\n            }\n        }\n    })();\n})( true && module.exports ? module.exports : self.nacl = self.nacl || {});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/tweetnacl/nacl-fast.js\n");

/***/ })

};
;